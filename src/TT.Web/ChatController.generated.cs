// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using TT.Web.Controllers.Generated;
namespace TT.Web.Controllers
{
    public partial class ChatController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ChatController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Index()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Chat()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Chat);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ChatLog()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChatLog);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ChatController Actions { get { return MVC.Chat; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "chat";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "chat";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = ("Index").ToLowerInvariant();
            public readonly string Chat = ("Chat").ToLowerInvariant();
            public readonly string PrivateChat = ("PrivateChat").ToLowerInvariant();
            public readonly string ChatLog = ("ChatLog").ToLowerInvariant();
            public readonly string ChatCommands = ("ChatCommands").ToLowerInvariant();
        }


        static readonly ActionParamsClass_Index s_params_Index = new ActionParamsClass_Index();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Index IndexParams { get { return s_params_Index; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Index
        {
            public readonly string room = ("room").ToLowerInvariant();
        }
        static readonly ActionParamsClass_Chat s_params_Chat = new ActionParamsClass_Chat();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Chat ChatParams { get { return s_params_Chat; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Chat
        {
            public readonly string room = ("room").ToLowerInvariant();
        }
        static readonly ActionParamsClass_ChatLog s_params_ChatLog = new ActionParamsClass_ChatLog();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ChatLog ChatLogParams { get { return s_params_ChatLog; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ChatLog
        {
            public readonly string room = ("room").ToLowerInvariant();
            public readonly string filter = ("filter").ToLowerInvariant();
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _ChatMenu = "_ChatMenu";
                public readonly string Chat = "Chat";
                public readonly string ChatCommands = "ChatCommands";
                public readonly string ChatIndex = "ChatIndex";
                public readonly string ChatLog = "ChatLog";
                public readonly string PrivateBegin = "PrivateBegin";
            }
            public readonly string _ChatMenu = "~/Views/Chat/_ChatMenu.cshtml";
            public readonly string Chat = "~/Views/Chat/Chat.cshtml";
            public readonly string ChatCommands = "~/Views/Chat/ChatCommands.cshtml";
            public readonly string ChatIndex = "~/Views/Chat/ChatIndex.cshtml";
            public readonly string ChatLog = "~/Views/Chat/ChatLog.cshtml";
            public readonly string PrivateBegin = "~/Views/Chat/PrivateBegin.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_ChatController : TT.Web.Controllers.ChatController
    {
        public T4MVC_ChatController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string room);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index(string room)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "room", room);
            IndexOverride(callInfo, room);
            return callInfo;
        }

        [NonAction]
        partial void ChatOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string room);

        [NonAction]
        public override System.Web.Mvc.ActionResult Chat(string room)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Chat);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "room", room);
            ChatOverride(callInfo, room);
            return callInfo;
        }

        [NonAction]
        partial void PrivateChatOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult PrivateChat()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PrivateChat);
            PrivateChatOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ChatLogOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string room, string filter);

        [NonAction]
        public override System.Web.Mvc.ActionResult ChatLog(string room, string filter)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChatLog);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "room", room);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "filter", filter);
            ChatLogOverride(callInfo, room, filter);
            return callInfo;
        }

        [NonAction]
        partial void ChatCommandsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ChatCommands()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChatCommands);
            ChatCommandsOverride(callInfo);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
