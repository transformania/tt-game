// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using TT.Web.Controllers.Generated;
namespace TT.Web.Controllers
{
    public partial class ModeratorController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ModeratorController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ModeratorController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddStrike()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddStrike);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult LockPvP()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LockPvP);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult HandleReport()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.HandleReport);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult HandleReportSend()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.HandleReportSend);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SetAccountLockoutDate()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetAccountLockoutDate);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SetAccountLockoutDateSend()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetAccountLockoutDateSend);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult EditNewsPostSend()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditNewsPostSend);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteNewsPost()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteNewsPost);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult RevertToBase()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RevertToBase);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ModReadConversation()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ModReadConversation);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ModeratorController Actions { get { return MVC.Moderator; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "moderator";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "moderator";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = ("Index").ToLowerInvariant();
            public readonly string ViewAbusiveMessages = ("ViewAbusiveMessages").ToLowerInvariant();
            public readonly string AddStrike = ("AddStrike").ToLowerInvariant();
            public readonly string LockPvP = ("LockPvP").ToLowerInvariant();
            public readonly string ViewReports = ("ViewReports").ToLowerInvariant();
            public readonly string HandleReport = ("HandleReport").ToLowerInvariant();
            public readonly string HandleReportSend = ("HandleReportSend").ToLowerInvariant();
            public readonly string SetAccountLockoutDate = ("SetAccountLockoutDate").ToLowerInvariant();
            public readonly string SetAccountLockoutDateSend = ("SetAccountLockoutDateSend").ToLowerInvariant();
            public readonly string ListNewsPosts = ("ListNewsPosts").ToLowerInvariant();
            public readonly string EditNewsPost = ("EditNewsPost").ToLowerInvariant();
            public readonly string EditNewsPostSend = ("EditNewsPostSend").ToLowerInvariant();
            public readonly string DeleteNewsPost = ("DeleteNewsPost").ToLowerInvariant();
            public readonly string RevertToBase = ("RevertToBase").ToLowerInvariant();
            public readonly string ModReadConversation = ("ModReadConversation").ToLowerInvariant();
        }


        static readonly ActionParamsClass_AddStrike s_params_AddStrike = new ActionParamsClass_AddStrike();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddStrike AddStrikeParams { get { return s_params_AddStrike; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddStrike
        {
            public readonly string input = ("input").ToLowerInvariant();
        }
        static readonly ActionParamsClass_LockPvP s_params_LockPvP = new ActionParamsClass_LockPvP();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_LockPvP LockPvPParams { get { return s_params_LockPvP; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_LockPvP
        {
            public readonly string suspendTimeoutViewModel = ("suspendTimeoutViewModel").ToLowerInvariant();
        }
        static readonly ActionParamsClass_HandleReport s_params_HandleReport = new ActionParamsClass_HandleReport();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_HandleReport HandleReportParams { get { return s_params_HandleReport; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_HandleReport
        {
            public readonly string reportId = ("reportId").ToLowerInvariant();
        }
        static readonly ActionParamsClass_HandleReportSend s_params_HandleReportSend = new ActionParamsClass_HandleReportSend();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_HandleReportSend HandleReportSendParams { get { return s_params_HandleReportSend; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_HandleReportSend
        {
            public readonly string input = ("input").ToLowerInvariant();
        }
        static readonly ActionParamsClass_SetAccountLockoutDate s_params_SetAccountLockoutDate = new ActionParamsClass_SetAccountLockoutDate();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetAccountLockoutDate SetAccountLockoutDateParams { get { return s_params_SetAccountLockoutDate; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetAccountLockoutDate
        {
            public readonly string userId = ("userId").ToLowerInvariant();
        }
        static readonly ActionParamsClass_SetAccountLockoutDateSend s_params_SetAccountLockoutDateSend = new ActionParamsClass_SetAccountLockoutDateSend();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetAccountLockoutDateSend SetAccountLockoutDateSendParams { get { return s_params_SetAccountLockoutDateSend; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetAccountLockoutDateSend
        {
            public readonly string suspendTimeoutViewModel = ("suspendTimeoutViewModel").ToLowerInvariant();
        }
        static readonly ActionParamsClass_EditNewsPost s_params_EditNewsPost = new ActionParamsClass_EditNewsPost();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EditNewsPost EditNewsPostParams { get { return s_params_EditNewsPost; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EditNewsPost
        {
            public readonly string id = ("id").ToLowerInvariant();
        }
        static readonly ActionParamsClass_EditNewsPostSend s_params_EditNewsPostSend = new ActionParamsClass_EditNewsPostSend();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EditNewsPostSend EditNewsPostSendParams { get { return s_params_EditNewsPostSend; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EditNewsPostSend
        {
            public readonly string input = ("input").ToLowerInvariant();
        }
        static readonly ActionParamsClass_DeleteNewsPost s_params_DeleteNewsPost = new ActionParamsClass_DeleteNewsPost();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteNewsPost DeleteNewsPostParams { get { return s_params_DeleteNewsPost; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteNewsPost
        {
            public readonly string Id = ("Id").ToLowerInvariant();
        }
        static readonly ActionParamsClass_RevertToBase s_params_RevertToBase = new ActionParamsClass_RevertToBase();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RevertToBase RevertToBaseParams { get { return s_params_RevertToBase; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RevertToBase
        {
            public readonly string Id = ("Id").ToLowerInvariant();
        }
        static readonly ActionParamsClass_ModReadConversation s_params_ModReadConversation = new ActionParamsClass_ModReadConversation();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ModReadConversation ModReadConversationParams { get { return s_params_ModReadConversation; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ModReadConversation
        {
            public readonly string messageId = ("messageId").ToLowerInvariant();
            public readonly string reporterId = ("reporterId").ToLowerInvariant();
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string EditNewsPost = "EditNewsPost";
                public readonly string HandleReport = "HandleReport";
                public readonly string Index = "Index";
                public readonly string ListNewsPosts = "ListNewsPosts";
                public readonly string SetAccountLockoutDate = "SetAccountLockoutDate";
                public readonly string ViewAbusiveMessages = "ViewAbusiveMessages";
                public readonly string ViewReports = "ViewReports";
            }
            public readonly string EditNewsPost = "~/Views/Moderator/EditNewsPost.cshtml";
            public readonly string HandleReport = "~/Views/Moderator/HandleReport.cshtml";
            public readonly string Index = "~/Views/Moderator/Index.cshtml";
            public readonly string ListNewsPosts = "~/Views/Moderator/ListNewsPosts.cshtml";
            public readonly string SetAccountLockoutDate = "~/Views/Moderator/SetAccountLockoutDate.cshtml";
            public readonly string ViewAbusiveMessages = "~/Views/Moderator/ViewAbusiveMessages.cshtml";
            public readonly string ViewReports = "~/Views/Moderator/ViewReports.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_ModeratorController : TT.Web.Controllers.ModeratorController
    {
        public T4MVC_ModeratorController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ViewAbusiveMessagesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ViewAbusiveMessages()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ViewAbusiveMessages);
            ViewAbusiveMessagesOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void AddStrikeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, TT.Domain.ViewModels.AddStrikeViewModel input);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddStrike(TT.Domain.ViewModels.AddStrikeViewModel input)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddStrike);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "input", input);
            AddStrikeOverride(callInfo, input);
            return callInfo;
        }

        [NonAction]
        partial void LockPvPOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, TT.Domain.ViewModels.SuspendTimeoutViewModel suspendTimeoutViewModel);

        [NonAction]
        public override System.Web.Mvc.ActionResult LockPvP(TT.Domain.ViewModels.SuspendTimeoutViewModel suspendTimeoutViewModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LockPvP);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "suspendTimeoutViewModel", suspendTimeoutViewModel);
            LockPvPOverride(callInfo, suspendTimeoutViewModel);
            return callInfo;
        }

        [NonAction]
        partial void ViewReportsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ViewReports()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ViewReports);
            ViewReportsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void HandleReportOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int reportId);

        [NonAction]
        public override System.Web.Mvc.ActionResult HandleReport(int reportId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.HandleReport);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "reportId", reportId);
            HandleReportOverride(callInfo, reportId);
            return callInfo;
        }

        [NonAction]
        partial void HandleReportSendOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, TT.Domain.Identity.DTOs.ReportDetail input);

        [NonAction]
        public override System.Web.Mvc.ActionResult HandleReportSend(TT.Domain.Identity.DTOs.ReportDetail input)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.HandleReportSend);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "input", input);
            HandleReportSendOverride(callInfo, input);
            return callInfo;
        }

        [NonAction]
        partial void SetAccountLockoutDateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string userId);

        [NonAction]
        public override System.Web.Mvc.ActionResult SetAccountLockoutDate(string userId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetAccountLockoutDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userId", userId);
            SetAccountLockoutDateOverride(callInfo, userId);
            return callInfo;
        }

        [NonAction]
        partial void SetAccountLockoutDateSendOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, TT.Domain.ViewModels.SuspendTimeoutViewModel suspendTimeoutViewModel);

        [NonAction]
        public override System.Web.Mvc.ActionResult SetAccountLockoutDateSend(TT.Domain.ViewModels.SuspendTimeoutViewModel suspendTimeoutViewModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetAccountLockoutDateSend);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "suspendTimeoutViewModel", suspendTimeoutViewModel);
            SetAccountLockoutDateSendOverride(callInfo, suspendTimeoutViewModel);
            return callInfo;
        }

        [NonAction]
        partial void ListNewsPostsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ListNewsPosts()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ListNewsPosts);
            ListNewsPostsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void EditNewsPostOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult EditNewsPost(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditNewsPost);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            EditNewsPostOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void EditNewsPostSendOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, TT.Domain.Models.NewsPost input);

        [NonAction]
        public override System.Web.Mvc.ActionResult EditNewsPostSend(TT.Domain.Models.NewsPost input)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditNewsPostSend);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "input", input);
            EditNewsPostSendOverride(callInfo, input);
            return callInfo;
        }

        [NonAction]
        partial void DeleteNewsPostOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int Id);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteNewsPost(int Id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteNewsPost);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Id", Id);
            DeleteNewsPostOverride(callInfo, Id);
            return callInfo;
        }

        [NonAction]
        partial void RevertToBaseOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int Id);

        [NonAction]
        public override System.Web.Mvc.ActionResult RevertToBase(int Id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RevertToBase);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Id", Id);
            RevertToBaseOverride(callInfo, Id);
            return callInfo;
        }

        [NonAction]
        partial void ModReadConversationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int messageId, int reporterId);

        [NonAction]
        public override System.Web.Mvc.ActionResult ModReadConversation(int messageId, int reporterId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ModReadConversation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "messageId", messageId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "reporterId", reporterId);
            ModReadConversationOverride(callInfo, messageId, reporterId);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
