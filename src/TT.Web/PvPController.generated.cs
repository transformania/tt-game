// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using TT.Web.Controllers.Generated;
namespace TT.Web.Controllers
{
    public partial class PvPController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public PvPController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected PvPController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult NewCharacter()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.NewCharacter);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult MoveTo()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MoveTo);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult EnterDungeon()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EnterDungeon);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AttackModal()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AttackModal);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Attack()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Attack);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Take()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Take);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Drop()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Drop);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Equip()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Equip);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Use()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Use);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult LookAtPlayer_FromMembershipId()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LookAtPlayer_FromMembershipId);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult LookAtPlayer()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LookAtPlayer);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult PlayerLookup()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PlayerLookup);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult PlayerLookupSend()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PlayerLookupSend);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult InanimateAction()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.InanimateAction);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AnimalAction()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AnimalAction);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult OwnerAction()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OwnerAction);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult FeralAction()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FeralAction);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddFriend()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddFriend);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult RespondToFriendRequest()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RespondToFriendRequest);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult WorldMap()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.WorldMap);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ChoosePerk()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChoosePerk);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ViewEffects()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ViewEffects);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Teleport()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Teleport);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ShoutSend()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ShoutSend);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult HeadPat()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.HeadPat);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult FlagForSuspiciousActivity()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FlagForSuspiciousActivity);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult TakeBus()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TakeBus);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public PvPController Actions { get { return MVC.PvP; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "pvp";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "pvp";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Play = ("Play").ToLowerInvariant();
            public readonly string ShowOffline = ("ShowOffline").ToLowerInvariant();
            public readonly string NewCharacter = ("NewCharacter").ToLowerInvariant();
            public readonly string Restart = ("Restart").ToLowerInvariant();
            public readonly string MoveTo = ("MoveTo").ToLowerInvariant();
            public readonly string EnterDungeon = ("EnterDungeon").ToLowerInvariant();
            public readonly string AttackModal = ("AttackModal").ToLowerInvariant();
            public readonly string Attack = ("Attack").ToLowerInvariant();
            public readonly string EnchantLocation = ("EnchantLocation").ToLowerInvariant();
            public readonly string SelfRestore = ("SelfRestore").ToLowerInvariant();
            public readonly string Meditate = ("Meditate").ToLowerInvariant();
            public readonly string Cleanse = ("Cleanse").ToLowerInvariant();
            public readonly string MySkills = ("MySkills").ToLowerInvariant();
            public readonly string Search = ("Search").ToLowerInvariant();
            public readonly string ClearLog = ("ClearLog").ToLowerInvariant();
            public readonly string DismissNotifications_Ajax = ("DismissNotifications_Ajax").ToLowerInvariant();
            public readonly string ViewLog = ("ViewLog").ToLowerInvariant();
            public readonly string Take = ("Take").ToLowerInvariant();
            public readonly string Drop = ("Drop").ToLowerInvariant();
            public readonly string Equip = ("Equip").ToLowerInvariant();
            public readonly string Use = ("Use").ToLowerInvariant();
            public readonly string LookAtPlayer_FromMembershipId = ("LookAtPlayer_FromMembershipId").ToLowerInvariant();
            public readonly string LookAtPlayer = ("LookAtPlayer").ToLowerInvariant();
            public readonly string PlayerLookup = ("PlayerLookup").ToLowerInvariant();
            public readonly string PlayerLookupSend = ("PlayerLookupSend").ToLowerInvariant();
            public readonly string InanimateAction = ("InanimateAction").ToLowerInvariant();
            public readonly string AnimalAction = ("AnimalAction").ToLowerInvariant();
            public readonly string OwnerAction = ("OwnerAction").ToLowerInvariant();
            public readonly string FeralAction = ("FeralAction").ToLowerInvariant();
            public readonly string MyFriends = ("MyFriends").ToLowerInvariant();
            public readonly string AddFriend = ("AddFriend").ToLowerInvariant();
            public readonly string RespondToFriendRequest = ("RespondToFriendRequest").ToLowerInvariant();
            public readonly string WorldMap = ("WorldMap").ToLowerInvariant();
            public readonly string LevelupPerk = ("LevelupPerk").ToLowerInvariant();
            public readonly string ChoosePerk = ("ChoosePerk").ToLowerInvariant();
            public readonly string MyPerks = ("MyPerks").ToLowerInvariant();
            public readonly string ViewEffects = ("ViewEffects").ToLowerInvariant();
            public readonly string Teleport = ("Teleport").ToLowerInvariant();
            public readonly string FightTheTransformation = ("FightTheTransformation").ToLowerInvariant();
            public readonly string InstantLock = ("InstantLock").ToLowerInvariant();
            public readonly string CurseTransformOwner = ("CurseTransformOwner").ToLowerInvariant();
            public readonly string EscapeFromOwner = ("EscapeFromOwner").ToLowerInvariant();
            public readonly string ReserveName = ("ReserveName").ToLowerInvariant();
            public readonly string Shout = ("Shout").ToLowerInvariant();
            public readonly string ShoutSend = ("ShoutSend").ToLowerInvariant();
            public readonly string HeadPat = ("HeadPat").ToLowerInvariant();
            public readonly string FlagForSuspiciousActivity = ("FlagForSuspiciousActivity").ToLowerInvariant();
            public readonly string Duel = ("Duel").ToLowerInvariant();
            public readonly string Bus = ("Bus").ToLowerInvariant();
            public readonly string TakeBus = ("TakeBus").ToLowerInvariant();
        }


        static readonly ActionParamsClass_NewCharacter s_params_NewCharacter = new ActionParamsClass_NewCharacter();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_NewCharacter NewCharacterParams { get { return s_params_NewCharacter; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_NewCharacter
        {
            public readonly string newCharacterViewModel = ("newCharacterViewModel").ToLowerInvariant();
        }
        static readonly ActionParamsClass_MoveTo s_params_MoveTo = new ActionParamsClass_MoveTo();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_MoveTo MoveToParams { get { return s_params_MoveTo; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_MoveTo
        {
            public readonly string locname = ("locname").ToLowerInvariant();
        }
        static readonly ActionParamsClass_EnterDungeon s_params_EnterDungeon = new ActionParamsClass_EnterDungeon();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EnterDungeon EnterDungeonParams { get { return s_params_EnterDungeon; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EnterDungeon
        {
            public readonly string entering = ("entering").ToLowerInvariant();
        }
        static readonly ActionParamsClass_AttackModal s_params_AttackModal = new ActionParamsClass_AttackModal();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AttackModal AttackModalParams { get { return s_params_AttackModal; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AttackModal
        {
            public readonly string targetId = ("targetId").ToLowerInvariant();
        }
        static readonly ActionParamsClass_Attack s_params_Attack = new ActionParamsClass_Attack();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Attack AttackParams { get { return s_params_Attack; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Attack
        {
            public readonly string targetId = ("targetId").ToLowerInvariant();
            public readonly string spellSourceId = ("spellSourceId").ToLowerInvariant();
        }
        static readonly ActionParamsClass_Take s_params_Take = new ActionParamsClass_Take();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Take TakeParams { get { return s_params_Take; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Take
        {
            public readonly string id = ("id").ToLowerInvariant();
        }
        static readonly ActionParamsClass_Drop s_params_Drop = new ActionParamsClass_Drop();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Drop DropParams { get { return s_params_Drop; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Drop
        {
            public readonly string itemId = ("itemId").ToLowerInvariant();
        }
        static readonly ActionParamsClass_Equip s_params_Equip = new ActionParamsClass_Equip();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Equip EquipParams { get { return s_params_Equip; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Equip
        {
            public readonly string itemId = ("itemId").ToLowerInvariant();
            public readonly string putOn = ("putOn").ToLowerInvariant();
        }
        static readonly ActionParamsClass_Use s_params_Use = new ActionParamsClass_Use();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Use UseParams { get { return s_params_Use; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Use
        {
            public readonly string itemId = ("itemId").ToLowerInvariant();
        }
        static readonly ActionParamsClass_LookAtPlayer_FromMembershipId s_params_LookAtPlayer_FromMembershipId = new ActionParamsClass_LookAtPlayer_FromMembershipId();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_LookAtPlayer_FromMembershipId LookAtPlayer_FromMembershipIdParams { get { return s_params_LookAtPlayer_FromMembershipId; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_LookAtPlayer_FromMembershipId
        {
            public readonly string id = ("id").ToLowerInvariant();
        }
        static readonly ActionParamsClass_LookAtPlayer s_params_LookAtPlayer = new ActionParamsClass_LookAtPlayer();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_LookAtPlayer LookAtPlayerParams { get { return s_params_LookAtPlayer; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_LookAtPlayer
        {
            public readonly string id = ("id").ToLowerInvariant();
        }
        static readonly ActionParamsClass_PlayerLookup s_params_PlayerLookup = new ActionParamsClass_PlayerLookup();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PlayerLookup PlayerLookupParams { get { return s_params_PlayerLookup; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PlayerLookup
        {
            public readonly string name = ("name").ToLowerInvariant();
        }
        static readonly ActionParamsClass_PlayerLookupSend s_params_PlayerLookupSend = new ActionParamsClass_PlayerLookupSend();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PlayerLookupSend PlayerLookupSendParams { get { return s_params_PlayerLookupSend; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PlayerLookupSend
        {
            public readonly string results = ("results").ToLowerInvariant();
        }
        static readonly ActionParamsClass_InanimateAction s_params_InanimateAction = new ActionParamsClass_InanimateAction();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_InanimateAction InanimateActionParams { get { return s_params_InanimateAction; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_InanimateAction
        {
            public readonly string actionName = ("actionName").ToLowerInvariant();
        }
        static readonly ActionParamsClass_AnimalAction s_params_AnimalAction = new ActionParamsClass_AnimalAction();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AnimalAction AnimalActionParams { get { return s_params_AnimalAction; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AnimalAction
        {
            public readonly string actionName = ("actionName").ToLowerInvariant();
            public readonly string targetId = ("targetId").ToLowerInvariant();
        }
        static readonly ActionParamsClass_OwnerAction s_params_OwnerAction = new ActionParamsClass_OwnerAction();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_OwnerAction OwnerActionParams { get { return s_params_OwnerAction; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_OwnerAction
        {
            public readonly string actionName = ("actionName").ToLowerInvariant();
            public readonly string itemId = ("itemId").ToLowerInvariant();
        }
        static readonly ActionParamsClass_FeralAction s_params_FeralAction = new ActionParamsClass_FeralAction();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_FeralAction FeralActionParams { get { return s_params_FeralAction; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_FeralAction
        {
            public readonly string actionName = ("actionName").ToLowerInvariant();
            public readonly string itemId = ("itemId").ToLowerInvariant();
        }
        static readonly ActionParamsClass_AddFriend s_params_AddFriend = new ActionParamsClass_AddFriend();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddFriend AddFriendParams { get { return s_params_AddFriend; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddFriend
        {
            public readonly string playerId = ("playerId").ToLowerInvariant();
        }
        static readonly ActionParamsClass_RespondToFriendRequest s_params_RespondToFriendRequest = new ActionParamsClass_RespondToFriendRequest();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RespondToFriendRequest RespondToFriendRequestParams { get { return s_params_RespondToFriendRequest; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RespondToFriendRequest
        {
            public readonly string id = ("id").ToLowerInvariant();
            public readonly string response = ("response").ToLowerInvariant();
        }
        static readonly ActionParamsClass_WorldMap s_params_WorldMap = new ActionParamsClass_WorldMap();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_WorldMap WorldMapParams { get { return s_params_WorldMap; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_WorldMap
        {
            public readonly string showEnchant = ("showEnchant").ToLowerInvariant();
        }
        static readonly ActionParamsClass_ChoosePerk s_params_ChoosePerk = new ActionParamsClass_ChoosePerk();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ChoosePerk ChoosePerkParams { get { return s_params_ChoosePerk; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ChoosePerk
        {
            public readonly string effectSourceId = ("effectSourceId").ToLowerInvariant();
        }
        static readonly ActionParamsClass_ViewEffects s_params_ViewEffects = new ActionParamsClass_ViewEffects();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ViewEffects ViewEffectsParams { get { return s_params_ViewEffects; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ViewEffects
        {
            public readonly string id = ("id").ToLowerInvariant();
        }
        static readonly ActionParamsClass_Teleport s_params_Teleport = new ActionParamsClass_Teleport();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Teleport TeleportParams { get { return s_params_Teleport; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Teleport
        {
            public readonly string itemId = ("itemId").ToLowerInvariant();
            public readonly string to = ("to").ToLowerInvariant();
        }
        static readonly ActionParamsClass_ShoutSend s_params_ShoutSend = new ActionParamsClass_ShoutSend();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ShoutSend ShoutSendParams { get { return s_params_ShoutSend; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ShoutSend
        {
            public readonly string input = ("input").ToLowerInvariant();
        }
        static readonly ActionParamsClass_HeadPat s_params_HeadPat = new ActionParamsClass_HeadPat();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_HeadPat HeadPatParams { get { return s_params_HeadPat; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_HeadPat
        {
            public readonly string playerId = ("playerId").ToLowerInvariant();
        }
        static readonly ActionParamsClass_FlagForSuspiciousActivity s_params_FlagForSuspiciousActivity = new ActionParamsClass_FlagForSuspiciousActivity();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_FlagForSuspiciousActivity FlagForSuspiciousActivityParams { get { return s_params_FlagForSuspiciousActivity; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_FlagForSuspiciousActivity
        {
            public readonly string suspendTimeoutViewModel = ("suspendTimeoutViewModel").ToLowerInvariant();
        }
        static readonly ActionParamsClass_TakeBus s_params_TakeBus = new ActionParamsClass_TakeBus();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_TakeBus TakeBusParams { get { return s_params_TakeBus; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_TakeBus
        {
            public readonly string destination = ("destination").ToLowerInvariant();
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Bus = "Bus";
                public readonly string Inventory = "Inventory";
                public readonly string LevelupPerk = "LevelupPerk";
                public readonly string LoginRequired = "LoginRequired";
                public readonly string LookAtPlayer = "LookAtPlayer";
                public readonly string LookAtPlayerInanimate = "LookAtPlayerInanimate";
                public readonly string MakeNewCharacter = "MakeNewCharacter";
                public readonly string MyFriends = "MyFriends";
                public readonly string MyPerks = "MyPerks";
                public readonly string MySkills = "MySkills";
                public readonly string partial_FormBuffs = "partial_FormBuffs";
                public readonly string partial_FrontPageAvatar = "partial_FrontPageAvatar";
                public readonly string partial_InventoryEquipped = "partial_InventoryEquipped";
                public readonly string partial_InventoryItem = "partial_InventoryItem";
                public readonly string partial_ItemBuffs = "partial_ItemBuffs";
                public readonly string partial_ShopkeeperItem = "partial_ShopkeeperItem";
                public readonly string partial_XpBar = "partial_XpBar";
                public readonly string Play = "Play";
                public readonly string Play_Animal = "Play_Animal";
                public readonly string Play_Inanimate = "Play_Inanimate";
                public readonly string Player_Partial = "Player_Partial";
                public readonly string PlayerLookup = "PlayerLookup";
                public readonly string Shout = "Shout";
                public readonly string TeleportMap = "TeleportMap";
                public readonly string ViewEffects = "ViewEffects";
                public readonly string ViewLog = "ViewLog";
                public readonly string WorldMap = "WorldMap";
            }
            public readonly string Bus = "~/Views/PvP/Bus.cshtml";
            public readonly string Inventory = "~/Views/PvP/Inventory.cshtml";
            public readonly string LevelupPerk = "~/Views/PvP/LevelupPerk.cshtml";
            public readonly string LoginRequired = "~/Views/PvP/LoginRequired.cshtml";
            public readonly string LookAtPlayer = "~/Views/PvP/LookAtPlayer.cshtml";
            public readonly string LookAtPlayerInanimate = "~/Views/PvP/LookAtPlayerInanimate.cshtml";
            public readonly string MakeNewCharacter = "~/Views/PvP/MakeNewCharacter.cshtml";
            public readonly string MyFriends = "~/Views/PvP/MyFriends.cshtml";
            public readonly string MyPerks = "~/Views/PvP/MyPerks.cshtml";
            public readonly string MySkills = "~/Views/PvP/MySkills.cshtml";
            public readonly string partial_FormBuffs = "~/Views/PvP/partial_FormBuffs.cshtml";
            public readonly string partial_FrontPageAvatar = "~/Views/PvP/partial_FrontPageAvatar.cshtml";
            public readonly string partial_InventoryEquipped = "~/Views/PvP/partial_InventoryEquipped.cshtml";
            public readonly string partial_InventoryItem = "~/Views/PvP/partial_InventoryItem.cshtml";
            public readonly string partial_ItemBuffs = "~/Views/PvP/partial_ItemBuffs.cshtml";
            public readonly string partial_ShopkeeperItem = "~/Views/PvP/partial_ShopkeeperItem.cshtml";
            public readonly string partial_XpBar = "~/Views/PvP/partial_XpBar.cshtml";
            public readonly string Play = "~/Views/PvP/Play.cshtml";
            public readonly string Play_Animal = "~/Views/PvP/Play_Animal.cshtml";
            public readonly string Play_Inanimate = "~/Views/PvP/Play_Inanimate.cshtml";
            public readonly string Player_Partial = "~/Views/PvP/Player_Partial.cshtml";
            public readonly string PlayerLookup = "~/Views/PvP/PlayerLookup.cshtml";
            public readonly string Shout = "~/Views/PvP/Shout.cshtml";
            public readonly string TeleportMap = "~/Views/PvP/TeleportMap.cshtml";
            public readonly string ViewEffects = "~/Views/PvP/ViewEffects.cshtml";
            public readonly string ViewLog = "~/Views/PvP/ViewLog.cshtml";
            public readonly string WorldMap = "~/Views/PvP/WorldMap.cshtml";
            static readonly _partialClass s_partial = new _partialClass();
            public _partialClass partial { get { return s_partial; } }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public partial class _partialClass
            {
                static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
                public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
                public class _ViewNamesClass
                {
                    public readonly string AjaxAttackModal = "AjaxAttackModal";
                    public readonly string captchaForm = "captchaForm";
                    public readonly string movementTable = "movementTable";
                    public readonly string OldLeaderboardLinks = "OldLeaderboardLinks";
                    public readonly string partial_AllBuffsTable = "partial_AllBuffsTable";
                    public readonly string partial_ItemDetail = "partial_ItemDetail";
                    public readonly string partial_perkBonus = "partial_perkBonus";
                    public readonly string partial_recentActivity = "partial_recentActivity";
                    public readonly string RoundStatus = "RoundStatus";
                    public readonly string SoulboundTo = "SoulboundTo";
                }
                public readonly string AjaxAttackModal = "~/Views/PvP/partial/AjaxAttackModal.cshtml";
                public readonly string captchaForm = "~/Views/PvP/partial/captchaForm.cshtml";
                public readonly string movementTable = "~/Views/PvP/partial/movementTable.cshtml";
                public readonly string OldLeaderboardLinks = "~/Views/PvP/partial/OldLeaderboardLinks.cshtml";
                public readonly string partial_AllBuffsTable = "~/Views/PvP/partial/partial_AllBuffsTable.cshtml";
                public readonly string partial_ItemDetail = "~/Views/PvP/partial/partial_ItemDetail.cshtml";
                public readonly string partial_perkBonus = "~/Views/PvP/partial/partial_perkBonus.cshtml";
                public readonly string partial_recentActivity = "~/Views/PvP/partial/partial_recentActivity.cshtml";
                public readonly string RoundStatus = "~/Views/PvP/partial/RoundStatus.cshtml";
                public readonly string SoulboundTo = "~/Views/PvP/partial/SoulboundTo.cshtml";
            }
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_PvPController : TT.Web.Controllers.PvPController
    {
        public T4MVC_PvPController() : base(Dummy.Instance) { }

        [NonAction]
        partial void PlayOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Play()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Play);
            PlayOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ShowOfflineOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ShowOffline()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ShowOffline);
            ShowOfflineOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void NewCharacterOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, TT.Domain.ViewModels.NewCharacterViewModel newCharacterViewModel);

        [NonAction]
        public override System.Web.Mvc.ActionResult NewCharacter(TT.Domain.ViewModels.NewCharacterViewModel newCharacterViewModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.NewCharacter);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "newCharacterViewModel", newCharacterViewModel);
            NewCharacterOverride(callInfo, newCharacterViewModel);
            return callInfo;
        }

        [NonAction]
        partial void RestartOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Restart()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Restart);
            RestartOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void MoveToOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string locname);

        [NonAction]
        public override System.Web.Mvc.ActionResult MoveTo(string locname)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MoveTo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "locname", locname);
            MoveToOverride(callInfo, locname);
            return callInfo;
        }

        [NonAction]
        partial void EnterDungeonOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string entering);

        [NonAction]
        public override System.Web.Mvc.ActionResult EnterDungeon(string entering)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EnterDungeon);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "entering", entering);
            EnterDungeonOverride(callInfo, entering);
            return callInfo;
        }

        [NonAction]
        partial void AttackModalOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int targetId);

        [NonAction]
        public override System.Web.Mvc.ActionResult AttackModal(int targetId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AttackModal);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "targetId", targetId);
            AttackModalOverride(callInfo, targetId);
            return callInfo;
        }

        [NonAction]
        partial void AttackOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int targetId, int spellSourceId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Attack(int targetId, int spellSourceId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Attack);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "targetId", targetId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "spellSourceId", spellSourceId);
            AttackOverride(callInfo, targetId, spellSourceId);
            return callInfo;
        }

        [NonAction]
        partial void EnchantLocationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult EnchantLocation()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EnchantLocation);
            EnchantLocationOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SelfRestoreOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult SelfRestore()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SelfRestore);
            SelfRestoreOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void MeditateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Meditate()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Meditate);
            MeditateOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CleanseOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Cleanse()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Cleanse);
            CleanseOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void MySkillsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult MySkills()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MySkills);
            MySkillsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SearchOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Search()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Search);
            SearchOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ClearLogOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ClearLog()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ClearLog);
            ClearLogOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void DismissNotifications_AjaxOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult DismissNotifications_Ajax()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DismissNotifications_Ajax);
            DismissNotifications_AjaxOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ViewLogOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ViewLog()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ViewLog);
            ViewLogOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void TakeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult Take(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Take);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            TakeOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void DropOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int itemId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Drop(int itemId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Drop);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "itemId", itemId);
            DropOverride(callInfo, itemId);
            return callInfo;
        }

        [NonAction]
        partial void EquipOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int itemId, bool putOn);

        [NonAction]
        public override System.Web.Mvc.ActionResult Equip(int itemId, bool putOn)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Equip);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "itemId", itemId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "putOn", putOn);
            EquipOverride(callInfo, itemId, putOn);
            return callInfo;
        }

        [NonAction]
        partial void UseOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int itemId);

        [NonAction]
        public override System.Web.Mvc.ActionResult Use(int itemId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Use);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "itemId", itemId);
            UseOverride(callInfo, itemId);
            return callInfo;
        }

        [NonAction]
        partial void LookAtPlayer_FromMembershipIdOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id);

        [NonAction]
        public override System.Web.Mvc.ActionResult LookAtPlayer_FromMembershipId(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LookAtPlayer_FromMembershipId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            LookAtPlayer_FromMembershipIdOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void LookAtPlayerOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult LookAtPlayer(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LookAtPlayer);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            LookAtPlayerOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void PlayerLookupOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string name);

        [NonAction]
        public override System.Web.Mvc.ActionResult PlayerLookup(string name)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PlayerLookup);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "name", name);
            PlayerLookupOverride(callInfo, name);
            return callInfo;
        }

        [NonAction]
        partial void PlayerLookupSendOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, TT.Domain.ViewModels.PlayerSearchViewModel results);

        [NonAction]
        public override System.Web.Mvc.ActionResult PlayerLookupSend(TT.Domain.ViewModels.PlayerSearchViewModel results)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PlayerLookupSend);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "results", results);
            PlayerLookupSendOverride(callInfo, results);
            return callInfo;
        }

        [NonAction]
        partial void InanimateActionOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string actionName);

        [NonAction]
        public override System.Web.Mvc.ActionResult InanimateAction(string actionName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.InanimateAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "actionName", actionName);
            InanimateActionOverride(callInfo, actionName);
            return callInfo;
        }

        [NonAction]
        partial void AnimalActionOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string actionName, int targetId);

        [NonAction]
        public override System.Web.Mvc.ActionResult AnimalAction(string actionName, int targetId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AnimalAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "actionName", actionName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "targetId", targetId);
            AnimalActionOverride(callInfo, actionName, targetId);
            return callInfo;
        }

        [NonAction]
        partial void OwnerActionOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string actionName, int itemId);

        [NonAction]
        public override System.Web.Mvc.ActionResult OwnerAction(string actionName, int itemId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OwnerAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "actionName", actionName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "itemId", itemId);
            OwnerActionOverride(callInfo, actionName, itemId);
            return callInfo;
        }

        [NonAction]
        partial void FeralActionOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string actionName, int itemId);

        [NonAction]
        public override System.Web.Mvc.ActionResult FeralAction(string actionName, int itemId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FeralAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "actionName", actionName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "itemId", itemId);
            FeralActionOverride(callInfo, actionName, itemId);
            return callInfo;
        }

        [NonAction]
        partial void MyFriendsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult MyFriends()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MyFriends);
            MyFriendsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void AddFriendOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int playerId);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddFriend(int playerId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddFriend);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "playerId", playerId);
            AddFriendOverride(callInfo, playerId);
            return callInfo;
        }

        [NonAction]
        partial void RespondToFriendRequestOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string response);

        [NonAction]
        public override System.Web.Mvc.ActionResult RespondToFriendRequest(int id, string response)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RespondToFriendRequest);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "response", response);
            RespondToFriendRequestOverride(callInfo, id, response);
            return callInfo;
        }

        [NonAction]
        partial void WorldMapOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string showEnchant);

        [NonAction]
        public override System.Web.Mvc.ActionResult WorldMap(string showEnchant)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.WorldMap);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "showEnchant", showEnchant);
            WorldMapOverride(callInfo, showEnchant);
            return callInfo;
        }

        [NonAction]
        partial void LevelupPerkOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult LevelupPerk()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LevelupPerk);
            LevelupPerkOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ChoosePerkOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int effectSourceId);

        [NonAction]
        public override System.Web.Mvc.ActionResult ChoosePerk(int effectSourceId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChoosePerk);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "effectSourceId", effectSourceId);
            ChoosePerkOverride(callInfo, effectSourceId);
            return callInfo;
        }

        [NonAction]
        partial void MyPerksOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult MyPerks()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MyPerks);
            MyPerksOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ViewEffectsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult ViewEffects(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ViewEffects);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ViewEffectsOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void TeleportOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int itemId, string to);

        [NonAction]
        public override System.Web.Mvc.ActionResult Teleport(int itemId, string to)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Teleport);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "itemId", itemId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "to", to);
            TeleportOverride(callInfo, itemId, to);
            return callInfo;
        }

        [NonAction]
        partial void FightTheTransformationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult FightTheTransformation()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FightTheTransformation);
            FightTheTransformationOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void InstantLockOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult InstantLock()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.InstantLock);
            InstantLockOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CurseTransformOwnerOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult CurseTransformOwner()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CurseTransformOwner);
            CurseTransformOwnerOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void EscapeFromOwnerOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult EscapeFromOwner()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EscapeFromOwner);
            EscapeFromOwnerOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ReserveNameOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ReserveName()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ReserveName);
            ReserveNameOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ShoutOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Shout()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Shout);
            ShoutOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ShoutSendOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, TT.Domain.ViewModels.PublicBroadcastViewModel input);

        [NonAction]
        public override System.Web.Mvc.ActionResult ShoutSend(TT.Domain.ViewModels.PublicBroadcastViewModel input)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ShoutSend);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "input", input);
            ShoutSendOverride(callInfo, input);
            return callInfo;
        }

        [NonAction]
        partial void HeadPatOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int playerId);

        [NonAction]
        public override System.Web.Mvc.ActionResult HeadPat(int playerId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.HeadPat);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "playerId", playerId);
            HeadPatOverride(callInfo, playerId);
            return callInfo;
        }

        [NonAction]
        partial void FlagForSuspiciousActivityOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, TT.Domain.ViewModels.SuspendTimeoutViewModel suspendTimeoutViewModel);

        [NonAction]
        public override System.Web.Mvc.ActionResult FlagForSuspiciousActivity(TT.Domain.ViewModels.SuspendTimeoutViewModel suspendTimeoutViewModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FlagForSuspiciousActivity);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "suspendTimeoutViewModel", suspendTimeoutViewModel);
            FlagForSuspiciousActivityOverride(callInfo, suspendTimeoutViewModel);
            return callInfo;
        }

        [NonAction]
        partial void DuelOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Duel()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Duel);
            DuelOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void BusOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Bus()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Bus);
            BusOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void TakeBusOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string destination);

        [NonAction]
        public override System.Web.Mvc.ActionResult TakeBus(string destination)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TakeBus);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "destination", destination);
            TakeBusOverride(callInfo, destination);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
