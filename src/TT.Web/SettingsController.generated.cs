// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using TT.Web.Controllers.Generated;
namespace TT.Web.Controllers
{
    public partial class SettingsController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public SettingsController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected SettingsController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ChangeGameMode()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangeGameMode);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ChangeRPMode()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangeRPMode);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ChangeGender()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangeGender);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ViewStrikes()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ViewStrikes);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SetBioSend()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetBioSend);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SetBioDelete()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetBioDelete);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ViewBio()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ViewBio);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DumpWillpower()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DumpWillpower);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SetNicknameSend()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetNicknameSend);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ToggleBlacklistOnPlayer()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ToggleBlacklistOnPlayer);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ChangeBlacklistType()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangeBlacklistType);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ChangeBlacklistNote()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangeBlacklistNote);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ChangeBlacklistNoteSend()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangeBlacklistNoteSend);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateFriendOnlyMessages()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateFriendOnlyMessages);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ViewPoll()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ViewPoll);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ReplyToPoll()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ReplyToPoll);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult PollResults()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PollResults);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult PollResultsClosed()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PollResultsClosed);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SetChatColor()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetChatColor);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult WriteAuthorArtistSend()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.WriteAuthorArtistSend);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AuthorArtistBio()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AuthorArtistBio);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SetBaseForm()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetBaseForm);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ArchiveSpell()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ArchiveSpell);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ArchiveAllMySpells()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ArchiveAllMySpells);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult BookmarkSpell()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.BookmarkSpell);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult PlayerStats()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PlayerStats);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult PlayerStatsTopOfType()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PlayerStatsTopOfType);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SetFriendNickname()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetFriendNickname);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SetFriendNicknameSend()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetFriendNicknameSend);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateRPClassifiedAd()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateRPClassifiedAd);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult RefreshRPClassifiedAd()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RefreshRPClassifiedAd);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteRPClassifiedAd()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteRPClassifiedAd);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ChaosRestoreBase()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChaosRestoreBase);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AllowChaosChanges()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AllowChaosChanges);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AllowOwnershipVisibility()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AllowOwnershipVisibility);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SetArtistBioVisibility()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetArtistBioVisibility);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ToggleOnline()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ToggleOnline);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ToggleBoss()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ToggleBoss);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public SettingsController Actions { get { return MVC.Settings; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "settings";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "settings";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Settings = ("Settings").ToLowerInvariant();
            public readonly string ChangeGameMode = ("ChangeGameMode").ToLowerInvariant();
            public readonly string ChangeRPMode = ("ChangeRPMode").ToLowerInvariant();
            public readonly string ChangeHardmode = ("ChangeHardmode").ToLowerInvariant();
            public readonly string ChangeGender = ("ChangeGender").ToLowerInvariant();
            public readonly string ViewStrikes = ("ViewStrikes").ToLowerInvariant();
            public readonly string SetBio = ("SetBio").ToLowerInvariant();
            public readonly string SetBioSend = ("SetBioSend").ToLowerInvariant();
            public readonly string SetBioDelete = ("SetBioDelete").ToLowerInvariant();
            public readonly string ViewBio = ("ViewBio").ToLowerInvariant();
            public readonly string DumpWillpower = ("DumpWillpower").ToLowerInvariant();
            public readonly string SetNickname = ("SetNickname").ToLowerInvariant();
            public readonly string SetNicknameSend = ("SetNicknameSend").ToLowerInvariant();
            public readonly string ToggleBlacklistOnPlayer = ("ToggleBlacklistOnPlayer").ToLowerInvariant();
            public readonly string MyBlacklistEntries = ("MyBlacklistEntries").ToLowerInvariant();
            public readonly string ChangeBlacklistType = ("ChangeBlacklistType").ToLowerInvariant();
            public readonly string ChangeBlacklistNote = ("ChangeBlacklistNote").ToLowerInvariant();
            public readonly string ChangeBlacklistNoteSend = ("ChangeBlacklistNoteSend").ToLowerInvariant();
            public readonly string UpdateFriendOnlyMessages = ("UpdateFriendOnlyMessages").ToLowerInvariant();
            public readonly string ViewPolls = ("ViewPolls").ToLowerInvariant();
            public readonly string ViewPoll = ("ViewPoll").ToLowerInvariant();
            public readonly string ReplyToPoll = ("ReplyToPoll").ToLowerInvariant();
            public readonly string PollResults = ("PollResults").ToLowerInvariant();
            public readonly string PollResultsClosed = ("PollResultsClosed").ToLowerInvariant();
            public readonly string SetChatColor = ("SetChatColor").ToLowerInvariant();
            public readonly string WriteAuthorArtistBio = ("WriteAuthorArtistBio").ToLowerInvariant();
            public readonly string WriteAuthorArtistSend = ("WriteAuthorArtistSend").ToLowerInvariant();
            public readonly string AuthorArtistBio = ("AuthorArtistBio").ToLowerInvariant();
            public readonly string SetBaseForm = ("SetBaseForm").ToLowerInvariant();
            public readonly string MyBaseForms = ("MyBaseForms").ToLowerInvariant();
            public readonly string ArchiveSpell = ("ArchiveSpell").ToLowerInvariant();
            public readonly string ArchiveAllMySpells = ("ArchiveAllMySpells").ToLowerInvariant();
            public readonly string BookmarkSpell = ("BookmarkSpell").ToLowerInvariant();
            public readonly string PlayerStats = ("PlayerStats").ToLowerInvariant();
            public readonly string PlayerStatsTopOfType = ("PlayerStatsTopOfType").ToLowerInvariant();
            public readonly string SetFriendNickname = ("SetFriendNickname").ToLowerInvariant();
            public readonly string SetFriendNicknameSend = ("SetFriendNicknameSend").ToLowerInvariant();
            public readonly string MyRPClassifiedAds = ("MyRPClassifiedAds").ToLowerInvariant();
            public readonly string CreateRPClassifiedAd = ("CreateRPClassifiedAd").ToLowerInvariant();
            public readonly string UpdateRPClassifiedAd = ("UpdateRPClassifiedAd").ToLowerInvariant();
            public readonly string RefreshRPClassifiedAd = ("RefreshRPClassifiedAd").ToLowerInvariant();
            public readonly string DeleteRPClassifiedAd = ("DeleteRPClassifiedAd").ToLowerInvariant();
            public readonly string ChaosRestoreBase = ("ChaosRestoreBase").ToLowerInvariant();
            public readonly string AllowChaosChanges = ("AllowChaosChanges").ToLowerInvariant();
            public readonly string AllowOwnershipVisibility = ("AllowOwnershipVisibility").ToLowerInvariant();
            public readonly string SetArtistBioVisibility = ("SetArtistBioVisibility").ToLowerInvariant();
            public readonly string LearnAnimateSpells = ("LearnAnimateSpells").ToLowerInvariant();
            public readonly string LearnInanimateSpells = ("LearnInanimateSpells").ToLowerInvariant();
            public readonly string LearnPetSpells = ("LearnPetSpells").ToLowerInvariant();
            public readonly string ForgetAllSpells = ("ForgetAllSpells").ToLowerInvariant();
            public readonly string ToggleOnline = ("ToggleOnline").ToLowerInvariant();
            public readonly string ToggleBoss = ("ToggleBoss").ToLowerInvariant();
            public readonly string BossDisableRestoreBase = ("BossDisableRestoreBase").ToLowerInvariant();
        }


        static readonly ActionParamsClass_ChangeGameMode s_params_ChangeGameMode = new ActionParamsClass_ChangeGameMode();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ChangeGameMode ChangeGameModeParams { get { return s_params_ChangeGameMode; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ChangeGameMode
        {
            public readonly string mode = ("mode").ToLowerInvariant();
        }
        static readonly ActionParamsClass_ChangeRPMode s_params_ChangeRPMode = new ActionParamsClass_ChangeRPMode();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ChangeRPMode ChangeRPModeParams { get { return s_params_ChangeRPMode; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ChangeRPMode
        {
            public readonly string inRP = ("inRP").ToLowerInvariant();
        }
        static readonly ActionParamsClass_ChangeGender s_params_ChangeGender = new ActionParamsClass_ChangeGender();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ChangeGender ChangeGenderParams { get { return s_params_ChangeGender; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ChangeGender
        {
            public readonly string changeGender = ("changeGender").ToLowerInvariant();
        }
        static readonly ActionParamsClass_ViewStrikes s_params_ViewStrikes = new ActionParamsClass_ViewStrikes();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ViewStrikes ViewStrikesParams { get { return s_params_ViewStrikes; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ViewStrikes
        {
            public readonly string id = ("id").ToLowerInvariant();
        }
        static readonly ActionParamsClass_SetBioSend s_params_SetBioSend = new ActionParamsClass_SetBioSend();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetBioSend SetBioSendParams { get { return s_params_SetBioSend; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetBioSend
        {
            public readonly string input = ("input").ToLowerInvariant();
        }
        static readonly ActionParamsClass_SetBioDelete s_params_SetBioDelete = new ActionParamsClass_SetBioDelete();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetBioDelete SetBioDeleteParams { get { return s_params_SetBioDelete; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetBioDelete
        {
            public readonly string input = ("input").ToLowerInvariant();
        }
        static readonly ActionParamsClass_ViewBio s_params_ViewBio = new ActionParamsClass_ViewBio();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ViewBio ViewBioParams { get { return s_params_ViewBio; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ViewBio
        {
            public readonly string id = ("id").ToLowerInvariant();
        }
        static readonly ActionParamsClass_DumpWillpower s_params_DumpWillpower = new ActionParamsClass_DumpWillpower();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DumpWillpower DumpWillpowerParams { get { return s_params_DumpWillpower; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DumpWillpower
        {
            public readonly string amount = ("amount").ToLowerInvariant();
        }
        static readonly ActionParamsClass_SetNicknameSend s_params_SetNicknameSend = new ActionParamsClass_SetNicknameSend();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetNicknameSend SetNicknameSendParams { get { return s_params_SetNicknameSend; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetNicknameSend
        {
            public readonly string input = ("input").ToLowerInvariant();
        }
        static readonly ActionParamsClass_ToggleBlacklistOnPlayer s_params_ToggleBlacklistOnPlayer = new ActionParamsClass_ToggleBlacklistOnPlayer();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ToggleBlacklistOnPlayer ToggleBlacklistOnPlayerParams { get { return s_params_ToggleBlacklistOnPlayer; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ToggleBlacklistOnPlayer
        {
            public readonly string id = ("id").ToLowerInvariant();
            public readonly string type = ("type").ToLowerInvariant();
        }
        static readonly ActionParamsClass_ChangeBlacklistType s_params_ChangeBlacklistType = new ActionParamsClass_ChangeBlacklistType();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ChangeBlacklistType ChangeBlacklistTypeParams { get { return s_params_ChangeBlacklistType; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ChangeBlacklistType
        {
            public readonly string id = ("id").ToLowerInvariant();
            public readonly string playerId = ("playerId").ToLowerInvariant();
            public readonly string type = ("type").ToLowerInvariant();
        }
        static readonly ActionParamsClass_ChangeBlacklistNote s_params_ChangeBlacklistNote = new ActionParamsClass_ChangeBlacklistNote();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ChangeBlacklistNote ChangeBlacklistNoteParams { get { return s_params_ChangeBlacklistNote; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ChangeBlacklistNote
        {
            public readonly string blacklistId = ("blacklistId").ToLowerInvariant();
            public readonly string playerId = ("playerId").ToLowerInvariant();
        }
        static readonly ActionParamsClass_ChangeBlacklistNoteSend s_params_ChangeBlacklistNoteSend = new ActionParamsClass_ChangeBlacklistNoteSend();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ChangeBlacklistNoteSend ChangeBlacklistNoteSendParams { get { return s_params_ChangeBlacklistNoteSend; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ChangeBlacklistNoteSend
        {
            public readonly string input = ("input").ToLowerInvariant();
        }
        static readonly ActionParamsClass_UpdateFriendOnlyMessages s_params_UpdateFriendOnlyMessages = new ActionParamsClass_UpdateFriendOnlyMessages();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateFriendOnlyMessages UpdateFriendOnlyMessagesParams { get { return s_params_UpdateFriendOnlyMessages; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateFriendOnlyMessages
        {
            public readonly string friendOnlyMessages = ("friendOnlyMessages").ToLowerInvariant();
        }
        static readonly ActionParamsClass_ViewPoll s_params_ViewPoll = new ActionParamsClass_ViewPoll();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ViewPoll ViewPollParams { get { return s_params_ViewPoll; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ViewPoll
        {
            public readonly string id = ("id").ToLowerInvariant();
        }
        static readonly ActionParamsClass_ReplyToPoll s_params_ReplyToPoll = new ActionParamsClass_ReplyToPoll();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ReplyToPoll ReplyToPollParams { get { return s_params_ReplyToPoll; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ReplyToPoll
        {
            public readonly string input = ("input").ToLowerInvariant();
        }
        static readonly ActionParamsClass_PollResults s_params_PollResults = new ActionParamsClass_PollResults();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PollResults PollResultsParams { get { return s_params_PollResults; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PollResults
        {
            public readonly string id = ("id").ToLowerInvariant();
        }
        static readonly ActionParamsClass_PollResultsClosed s_params_PollResultsClosed = new ActionParamsClass_PollResultsClosed();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PollResultsClosed PollResultsClosedParams { get { return s_params_PollResultsClosed; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PollResultsClosed
        {
            public readonly string id = ("id").ToLowerInvariant();
        }
        static readonly ActionParamsClass_SetChatColor s_params_SetChatColor = new ActionParamsClass_SetChatColor();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetChatColor SetChatColorParams { get { return s_params_SetChatColor; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetChatColor
        {
            public readonly string color = ("color").ToLowerInvariant();
        }
        static readonly ActionParamsClass_WriteAuthorArtistSend s_params_WriteAuthorArtistSend = new ActionParamsClass_WriteAuthorArtistSend();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_WriteAuthorArtistSend WriteAuthorArtistSendParams { get { return s_params_WriteAuthorArtistSend; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_WriteAuthorArtistSend
        {
            public readonly string input = ("input").ToLowerInvariant();
        }
        static readonly ActionParamsClass_AuthorArtistBio s_params_AuthorArtistBio = new ActionParamsClass_AuthorArtistBio();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AuthorArtistBio AuthorArtistBioParams { get { return s_params_AuthorArtistBio; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AuthorArtistBio
        {
            public readonly string id = ("id").ToLowerInvariant();
        }
        static readonly ActionParamsClass_SetBaseForm s_params_SetBaseForm = new ActionParamsClass_SetBaseForm();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetBaseForm SetBaseFormParams { get { return s_params_SetBaseForm; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetBaseForm
        {
            public readonly string baseId = ("baseId").ToLowerInvariant();
        }
        static readonly ActionParamsClass_ArchiveSpell s_params_ArchiveSpell = new ActionParamsClass_ArchiveSpell();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ArchiveSpell ArchiveSpellParams { get { return s_params_ArchiveSpell; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ArchiveSpell
        {
            public readonly string skillSourceId = ("skillSourceId").ToLowerInvariant();
        }
        static readonly ActionParamsClass_ArchiveAllMySpells s_params_ArchiveAllMySpells = new ActionParamsClass_ArchiveAllMySpells();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ArchiveAllMySpells ArchiveAllMySpellsParams { get { return s_params_ArchiveAllMySpells; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ArchiveAllMySpells
        {
            public readonly string archive = ("archive").ToLowerInvariant();
        }
        static readonly ActionParamsClass_BookmarkSpell s_params_BookmarkSpell = new ActionParamsClass_BookmarkSpell();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_BookmarkSpell BookmarkSpellParams { get { return s_params_BookmarkSpell; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_BookmarkSpell
        {
            public readonly string skillSourceId = ("skillSourceId").ToLowerInvariant();
        }
        static readonly ActionParamsClass_PlayerStats s_params_PlayerStats = new ActionParamsClass_PlayerStats();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PlayerStats PlayerStatsParams { get { return s_params_PlayerStats; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PlayerStats
        {
            public readonly string id = ("id").ToLowerInvariant();
        }
        static readonly ActionParamsClass_PlayerStatsTopOfType s_params_PlayerStatsTopOfType = new ActionParamsClass_PlayerStatsTopOfType();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PlayerStatsTopOfType PlayerStatsTopOfTypeParams { get { return s_params_PlayerStatsTopOfType; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PlayerStatsTopOfType
        {
            public readonly string type = ("type").ToLowerInvariant();
        }
        static readonly ActionParamsClass_SetFriendNickname s_params_SetFriendNickname = new ActionParamsClass_SetFriendNickname();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetFriendNickname SetFriendNicknameParams { get { return s_params_SetFriendNickname; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetFriendNickname
        {
            public readonly string id = ("id").ToLowerInvariant();
        }
        static readonly ActionParamsClass_SetFriendNicknameSend s_params_SetFriendNicknameSend = new ActionParamsClass_SetFriendNicknameSend();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetFriendNicknameSend SetFriendNicknameSendParams { get { return s_params_SetFriendNicknameSend; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetFriendNicknameSend
        {
            public readonly string input = ("input").ToLowerInvariant();
        }
        static readonly ActionParamsClass_UpdateRPClassifiedAd s_params_UpdateRPClassifiedAd = new ActionParamsClass_UpdateRPClassifiedAd();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateRPClassifiedAd UpdateRPClassifiedAdParams { get { return s_params_UpdateRPClassifiedAd; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateRPClassifiedAd
        {
            public readonly string id = ("id").ToLowerInvariant();
            public readonly string input = ("input").ToLowerInvariant();
        }
        static readonly ActionParamsClass_RefreshRPClassifiedAd s_params_RefreshRPClassifiedAd = new ActionParamsClass_RefreshRPClassifiedAd();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RefreshRPClassifiedAd RefreshRPClassifiedAdParams { get { return s_params_RefreshRPClassifiedAd; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RefreshRPClassifiedAd
        {
            public readonly string id = ("id").ToLowerInvariant();
        }
        static readonly ActionParamsClass_CreateRPClassifiedAd s_params_CreateRPClassifiedAd = new ActionParamsClass_CreateRPClassifiedAd();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CreateRPClassifiedAd CreateRPClassifiedAdParams { get { return s_params_CreateRPClassifiedAd; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CreateRPClassifiedAd
        {
            public readonly string input = ("input").ToLowerInvariant();
        }
        static readonly ActionParamsClass_DeleteRPClassifiedAd s_params_DeleteRPClassifiedAd = new ActionParamsClass_DeleteRPClassifiedAd();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteRPClassifiedAd DeleteRPClassifiedAdParams { get { return s_params_DeleteRPClassifiedAd; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteRPClassifiedAd
        {
            public readonly string id = ("id").ToLowerInvariant();
        }
        static readonly ActionParamsClass_ChaosRestoreBase s_params_ChaosRestoreBase = new ActionParamsClass_ChaosRestoreBase();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ChaosRestoreBase ChaosRestoreBaseParams { get { return s_params_ChaosRestoreBase; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ChaosRestoreBase
        {
            public readonly string option = ("option").ToLowerInvariant();
        }
        static readonly ActionParamsClass_AllowChaosChanges s_params_AllowChaosChanges = new ActionParamsClass_AllowChaosChanges();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AllowChaosChanges AllowChaosChangesParams { get { return s_params_AllowChaosChanges; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AllowChaosChanges
        {
            public readonly string allowChanges = ("allowChanges").ToLowerInvariant();
        }
        static readonly ActionParamsClass_AllowOwnershipVisibility s_params_AllowOwnershipVisibility = new ActionParamsClass_AllowOwnershipVisibility();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AllowOwnershipVisibility AllowOwnershipVisibilityParams { get { return s_params_AllowOwnershipVisibility; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AllowOwnershipVisibility
        {
            public readonly string allowSearch = ("allowSearch").ToLowerInvariant();
        }
        static readonly ActionParamsClass_SetArtistBioVisibility s_params_SetArtistBioVisibility = new ActionParamsClass_SetArtistBioVisibility();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetArtistBioVisibility SetArtistBioVisibilityParams { get { return s_params_SetArtistBioVisibility; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetArtistBioVisibility
        {
            public readonly string isLive = ("isLive").ToLowerInvariant();
        }
        static readonly ActionParamsClass_ToggleOnline s_params_ToggleOnline = new ActionParamsClass_ToggleOnline();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ToggleOnline ToggleOnlineParams { get { return s_params_ToggleOnline; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ToggleOnline
        {
            public readonly string setOnlineToggle = ("setOnlineToggle").ToLowerInvariant();
        }
        static readonly ActionParamsClass_ToggleBoss s_params_ToggleBoss = new ActionParamsClass_ToggleBoss();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ToggleBoss ToggleBossParams { get { return s_params_ToggleBoss; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ToggleBoss
        {
            public readonly string setBossDisable = ("setBossDisable").ToLowerInvariant();
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string AuthorArtistBio = "AuthorArtistBio";
                public readonly string ChangeBlacklistNote = "ChangeBlacklistNote";
                public readonly string CreateOrUpdateRPClassifiedAd = "CreateOrUpdateRPClassifiedAd";
                public readonly string MyBaseForms = "MyBaseForms";
                public readonly string MyBlacklistEntries = "MyBlacklistEntries";
                public readonly string MyRPClassifiedAds = "MyRPClassifiedAds";
                public readonly string PlayerStats = "PlayerStats";
                public readonly string SetBio = "SetBio";
                public readonly string SetFriendNickname = "SetFriendNickname";
                public readonly string SetNickname = "SetNickname";
                public readonly string Settings = "Settings";
                public readonly string ViewBio = "ViewBio";
                public readonly string ViewPoll = "ViewPoll";
                public readonly string ViewPolls = "ViewPolls";
                public readonly string ViewStrikes = "ViewStrikes";
                public readonly string WriteAuthorArtistBio = "WriteAuthorArtistBio";
            }
            public readonly string AuthorArtistBio = "~/Views/Settings/AuthorArtistBio.cshtml";
            public readonly string ChangeBlacklistNote = "~/Views/Settings/ChangeBlacklistNote.cshtml";
            public readonly string CreateOrUpdateRPClassifiedAd = "~/Views/Settings/CreateOrUpdateRPClassifiedAd.cshtml";
            public readonly string MyBaseForms = "~/Views/Settings/MyBaseForms.cshtml";
            public readonly string MyBlacklistEntries = "~/Views/Settings/MyBlacklistEntries.cshtml";
            public readonly string MyRPClassifiedAds = "~/Views/Settings/MyRPClassifiedAds.cshtml";
            public readonly string PlayerStats = "~/Views/Settings/PlayerStats.cshtml";
            public readonly string SetBio = "~/Views/Settings/SetBio.cshtml";
            public readonly string SetFriendNickname = "~/Views/Settings/SetFriendNickname.cshtml";
            public readonly string SetNickname = "~/Views/Settings/SetNickname.cshtml";
            public readonly string Settings = "~/Views/Settings/Settings.cshtml";
            public readonly string ViewBio = "~/Views/Settings/ViewBio.cshtml";
            public readonly string ViewPoll = "~/Views/Settings/ViewPoll.cshtml";
            public readonly string ViewPolls = "~/Views/Settings/ViewPolls.cshtml";
            public readonly string ViewStrikes = "~/Views/Settings/ViewStrikes.cshtml";
            public readonly string WriteAuthorArtistBio = "~/Views/Settings/WriteAuthorArtistBio.cshtml";
            static readonly _partialClass s_partial = new _partialClass();
            public _partialClass partial { get { return s_partial; } }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public partial class _partialClass
            {
                static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
                public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
                public class _ViewNamesClass
                {
                    public readonly string ArchiveNotice = "ArchiveNotice";
                    public readonly string PlayerStatsTopOfType = "PlayerStatsTopOfType";
                    public readonly string rptags = "rptags";
                }
                public readonly string ArchiveNotice = "~/Views/Settings/partial/ArchiveNotice.cshtml";
                public readonly string PlayerStatsTopOfType = "~/Views/Settings/partial/PlayerStatsTopOfType.cshtml";
                public readonly string rptags = "~/Views/Settings/partial/rptags.cshtml";
            }
            static readonly _PollsClass s_Polls = new _PollsClass();
            public _PollsClass Polls { get { return s_Polls; } }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public partial class _PollsClass
            {
                static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
                public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
                public class _ViewNamesClass
                {
                }
                static readonly _ClosedClass s_Closed = new _ClosedClass();
                public _ClosedClass Closed { get { return s_Closed; } }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public partial class _ClosedClass
                {
                    static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
                    public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
                    public class _ViewNamesClass
                    {
                        public readonly string poll1 = "poll1";
                    }
                    public readonly string poll1 = "~/Views/Settings/Polls/Closed/poll1.cshtml";
                }
                static readonly _OpenClass s_Open = new _OpenClass();
                public _OpenClass Open { get { return s_Open; } }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public partial class _OpenClass
                {
                    static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
                    public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
                    public class _ViewNamesClass
                    {
                        public readonly string poll1 = "poll1";
                        public readonly string poll2 = "poll2";
                        public readonly string poll3 = "poll3";
                        public readonly string poll4 = "poll4";
                        public readonly string poll5 = "poll5";
                    }
                    public readonly string poll1 = "~/Views/Settings/Polls/Open/poll1.cshtml";
                    public readonly string poll2 = "~/Views/Settings/Polls/Open/poll2.cshtml";
                    public readonly string poll3 = "~/Views/Settings/Polls/Open/poll3.cshtml";
                    public readonly string poll4 = "~/Views/Settings/Polls/Open/poll4.cshtml";
                    public readonly string poll5 = "~/Views/Settings/Polls/Open/poll5.cshtml";
                }
                static readonly _ReadClass s_Read = new _ReadClass();
                public _ReadClass Read { get { return s_Read; } }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public partial class _ReadClass
                {
                    static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
                    public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
                    public class _ViewNamesClass
                    {
                        public readonly string poll1 = "poll1";
                        public readonly string poll2 = "poll2";
                        public readonly string poll3 = "poll3";
                        public readonly string poll4 = "poll4";
                        public readonly string poll5 = "poll5";
                    }
                    public readonly string poll1 = "~/Views/Settings/Polls/Read/poll1.cshtml";
                    public readonly string poll2 = "~/Views/Settings/Polls/Read/poll2.cshtml";
                    public readonly string poll3 = "~/Views/Settings/Polls/Read/poll3.cshtml";
                    public readonly string poll4 = "~/Views/Settings/Polls/Read/poll4.cshtml";
                    public readonly string poll5 = "~/Views/Settings/Polls/Read/poll5.cshtml";
                }
            }
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_SettingsController : TT.Web.Controllers.SettingsController
    {
        public T4MVC_SettingsController() : base(Dummy.Instance) { }

        [NonAction]
        partial void SettingsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Settings()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Settings);
            SettingsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ChangeGameModeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int mode);

        [NonAction]
        public override System.Web.Mvc.ActionResult ChangeGameMode(int mode)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangeGameMode);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "mode", mode);
            ChangeGameModeOverride(callInfo, mode);
            return callInfo;
        }

        [NonAction]
        partial void ChangeRPModeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, bool inRP);

        [NonAction]
        public override System.Web.Mvc.ActionResult ChangeRPMode(bool inRP)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangeRPMode);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "inRP", inRP);
            ChangeRPModeOverride(callInfo, inRP);
            return callInfo;
        }

        [NonAction]
        partial void ChangeHardmodeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ChangeHardmode()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangeHardmode);
            ChangeHardmodeOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ChangeGenderOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int changeGender);

        [NonAction]
        public override System.Web.Mvc.ActionResult ChangeGender(int changeGender)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangeGender);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "changeGender", changeGender);
            ChangeGenderOverride(callInfo, changeGender);
            return callInfo;
        }

        [NonAction]
        partial void ViewStrikesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id);

        [NonAction]
        public override System.Web.Mvc.ActionResult ViewStrikes(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ViewStrikes);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ViewStrikesOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void SetBioOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult SetBio()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetBio);
            SetBioOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SetBioSendOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, TT.Domain.ViewModels.SetBioViewModel input);

        [NonAction]
        public override System.Web.Mvc.ActionResult SetBioSend(TT.Domain.ViewModels.SetBioViewModel input)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetBioSend);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "input", input);
            SetBioSendOverride(callInfo, input);
            return callInfo;
        }

        [NonAction]
        partial void SetBioDeleteOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, TT.Domain.Models.PlayerBio input);

        [NonAction]
        public override System.Web.Mvc.ActionResult SetBioDelete(TT.Domain.Models.PlayerBio input)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetBioDelete);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "input", input);
            SetBioDeleteOverride(callInfo, input);
            return callInfo;
        }

        [NonAction]
        partial void ViewBioOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id);

        [NonAction]
        public override System.Web.Mvc.ActionResult ViewBio(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ViewBio);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ViewBioOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void DumpWillpowerOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string amount);

        [NonAction]
        public override System.Web.Mvc.ActionResult DumpWillpower(string amount)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DumpWillpower);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "amount", amount);
            DumpWillpowerOverride(callInfo, amount);
            return callInfo;
        }

        [NonAction]
        partial void SetNicknameOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult SetNickname()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetNickname);
            SetNicknameOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SetNicknameSendOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, TT.Web.ViewModels.SetNicknameViewModel input);

        [NonAction]
        public override System.Web.Mvc.ActionResult SetNicknameSend(TT.Web.ViewModels.SetNicknameViewModel input)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetNicknameSend);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "input", input);
            SetNicknameSendOverride(callInfo, input);
            return callInfo;
        }

        [NonAction]
        partial void ToggleBlacklistOnPlayerOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, int type);

        [NonAction]
        public override System.Web.Mvc.ActionResult ToggleBlacklistOnPlayer(int id, int type)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ToggleBlacklistOnPlayer);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "type", type);
            ToggleBlacklistOnPlayerOverride(callInfo, id, type);
            return callInfo;
        }

        [NonAction]
        partial void MyBlacklistEntriesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult MyBlacklistEntries()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MyBlacklistEntries);
            MyBlacklistEntriesOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ChangeBlacklistTypeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, int playerId, string type);

        [NonAction]
        public override System.Web.Mvc.ActionResult ChangeBlacklistType(int id, int playerId, string type)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangeBlacklistType);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "playerId", playerId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "type", type);
            ChangeBlacklistTypeOverride(callInfo, id, playerId, type);
            return callInfo;
        }

        [NonAction]
        partial void ChangeBlacklistNoteOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int blacklistId, int playerId);

        [NonAction]
        public override System.Web.Mvc.ActionResult ChangeBlacklistNote(int blacklistId, int playerId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangeBlacklistNote);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "blacklistId", blacklistId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "playerId", playerId);
            ChangeBlacklistNoteOverride(callInfo, blacklistId, playerId);
            return callInfo;
        }

        [NonAction]
        partial void ChangeBlacklistNoteSendOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, TT.Domain.ViewModels.BlacklistEntryViewModel input);

        [NonAction]
        public override System.Web.Mvc.ActionResult ChangeBlacklistNoteSend(TT.Domain.ViewModels.BlacklistEntryViewModel input)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangeBlacklistNoteSend);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "input", input);
            ChangeBlacklistNoteSendOverride(callInfo, input);
            return callInfo;
        }

        [NonAction]
        partial void UpdateFriendOnlyMessagesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, bool friendOnlyMessages);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateFriendOnlyMessages(bool friendOnlyMessages)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateFriendOnlyMessages);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "friendOnlyMessages", friendOnlyMessages);
            UpdateFriendOnlyMessagesOverride(callInfo, friendOnlyMessages);
            return callInfo;
        }

        [NonAction]
        partial void ViewPollsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ViewPolls()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ViewPolls);
            ViewPollsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ViewPollOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult ViewPoll(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ViewPoll);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ViewPollOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void ReplyToPollOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, TT.Domain.Models.PollEntry input);

        [NonAction]
        public override System.Web.Mvc.ActionResult ReplyToPoll(TT.Domain.Models.PollEntry input)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ReplyToPoll);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "input", input);
            ReplyToPollOverride(callInfo, input);
            return callInfo;
        }

        [NonAction]
        partial void PollResultsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult PollResults(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PollResults);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            PollResultsOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void PollResultsClosedOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult PollResultsClosed(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PollResultsClosed);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            PollResultsClosedOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void SetChatColorOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string color);

        [NonAction]
        public override System.Web.Mvc.ActionResult SetChatColor(string color)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetChatColor);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "color", color);
            SetChatColorOverride(callInfo, color);
            return callInfo;
        }

        [NonAction]
        partial void WriteAuthorArtistBioOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult WriteAuthorArtistBio()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.WriteAuthorArtistBio);
            WriteAuthorArtistBioOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void WriteAuthorArtistSendOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, TT.Domain.Models.AuthorArtistBio input);

        [NonAction]
        public override System.Web.Mvc.ActionResult WriteAuthorArtistSend(TT.Domain.Models.AuthorArtistBio input)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.WriteAuthorArtistSend);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "input", input);
            WriteAuthorArtistSendOverride(callInfo, input);
            return callInfo;
        }

        [NonAction]
        partial void AuthorArtistBioOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id);

        [NonAction]
        public override System.Web.Mvc.ActionResult AuthorArtistBio(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AuthorArtistBio);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            AuthorArtistBioOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void SetBaseFormOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int baseId);

        [NonAction]
        public override System.Web.Mvc.ActionResult SetBaseForm(int baseId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetBaseForm);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "baseId", baseId);
            SetBaseFormOverride(callInfo, baseId);
            return callInfo;
        }

        [NonAction]
        partial void MyBaseFormsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult MyBaseForms()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MyBaseForms);
            MyBaseFormsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ArchiveSpellOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int skillSourceId);

        [NonAction]
        public override System.Web.Mvc.ActionResult ArchiveSpell(int skillSourceId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ArchiveSpell);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "skillSourceId", skillSourceId);
            ArchiveSpellOverride(callInfo, skillSourceId);
            return callInfo;
        }

        [NonAction]
        partial void ArchiveAllMySpellsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string archive);

        [NonAction]
        public override System.Web.Mvc.ActionResult ArchiveAllMySpells(string archive)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ArchiveAllMySpells);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "archive", archive);
            ArchiveAllMySpellsOverride(callInfo, archive);
            return callInfo;
        }

        [NonAction]
        partial void BookmarkSpellOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int skillSourceId);

        [NonAction]
        public override System.Web.Mvc.ActionResult BookmarkSpell(int skillSourceId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.BookmarkSpell);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "skillSourceId", skillSourceId);
            BookmarkSpellOverride(callInfo, skillSourceId);
            return callInfo;
        }

        [NonAction]
        partial void PlayerStatsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id);

        [NonAction]
        public override System.Web.Mvc.ActionResult PlayerStats(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PlayerStats);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            PlayerStatsOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void PlayerStatsTopOfTypeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string type);

        [NonAction]
        public override System.Web.Mvc.ActionResult PlayerStatsTopOfType(string type)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PlayerStatsTopOfType);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "type", type);
            PlayerStatsTopOfTypeOverride(callInfo, type);
            return callInfo;
        }

        [NonAction]
        partial void SetFriendNicknameOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult SetFriendNickname(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetFriendNickname);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            SetFriendNicknameOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void SetFriendNicknameSendOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, TT.Domain.ViewModels.SetFriendNicknameViewModel input);

        [NonAction]
        public override System.Web.Mvc.ActionResult SetFriendNicknameSend(TT.Domain.ViewModels.SetFriendNicknameViewModel input)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetFriendNicknameSend);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "input", input);
            SetFriendNicknameSendOverride(callInfo, input);
            return callInfo;
        }

        [NonAction]
        partial void MyRPClassifiedAdsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult MyRPClassifiedAds()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MyRPClassifiedAds);
            MyRPClassifiedAdsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CreateRPClassifiedAdOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult CreateRPClassifiedAd()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateRPClassifiedAd);
            CreateRPClassifiedAdOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void UpdateRPClassifiedAdOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateRPClassifiedAd(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateRPClassifiedAd);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            UpdateRPClassifiedAdOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void RefreshRPClassifiedAdOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult RefreshRPClassifiedAd(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RefreshRPClassifiedAd);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            RefreshRPClassifiedAdOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void CreateRPClassifiedAdOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, TT.Domain.ClassifiedAds.DTOs.RPClassifiedAdDetail input);

        [NonAction]
        public override System.Web.Mvc.ActionResult CreateRPClassifiedAd(TT.Domain.ClassifiedAds.DTOs.RPClassifiedAdDetail input)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateRPClassifiedAd);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "input", input);
            CreateRPClassifiedAdOverride(callInfo, input);
            return callInfo;
        }

        [NonAction]
        partial void UpdateRPClassifiedAdOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, TT.Domain.ClassifiedAds.DTOs.RPClassifiedAdDetail input);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateRPClassifiedAd(TT.Domain.ClassifiedAds.DTOs.RPClassifiedAdDetail input)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateRPClassifiedAd);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "input", input);
            UpdateRPClassifiedAdOverride(callInfo, input);
            return callInfo;
        }

        [NonAction]
        partial void DeleteRPClassifiedAdOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteRPClassifiedAd(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteRPClassifiedAd);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            DeleteRPClassifiedAdOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void ChaosRestoreBaseOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int option);

        [NonAction]
        public override System.Web.Mvc.ActionResult ChaosRestoreBase(int option)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChaosRestoreBase);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "option", option);
            ChaosRestoreBaseOverride(callInfo, option);
            return callInfo;
        }

        [NonAction]
        partial void AllowChaosChangesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, bool allowChanges);

        [NonAction]
        public override System.Web.Mvc.ActionResult AllowChaosChanges(bool allowChanges)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AllowChaosChanges);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "allowChanges", allowChanges);
            AllowChaosChangesOverride(callInfo, allowChanges);
            return callInfo;
        }

        [NonAction]
        partial void AllowOwnershipVisibilityOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, bool allowSearch);

        [NonAction]
        public override System.Web.Mvc.ActionResult AllowOwnershipVisibility(bool allowSearch)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AllowOwnershipVisibility);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "allowSearch", allowSearch);
            AllowOwnershipVisibilityOverride(callInfo, allowSearch);
            return callInfo;
        }

        [NonAction]
        partial void SetArtistBioVisibilityOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, bool isLive);

        [NonAction]
        public override System.Web.Mvc.ActionResult SetArtistBioVisibility(bool isLive)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetArtistBioVisibility);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "isLive", isLive);
            SetArtistBioVisibilityOverride(callInfo, isLive);
            return callInfo;
        }

        [NonAction]
        partial void LearnAnimateSpellsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult LearnAnimateSpells()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LearnAnimateSpells);
            LearnAnimateSpellsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void LearnInanimateSpellsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult LearnInanimateSpells()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LearnInanimateSpells);
            LearnInanimateSpellsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void LearnPetSpellsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult LearnPetSpells()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.LearnPetSpells);
            LearnPetSpellsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ForgetAllSpellsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ForgetAllSpells()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ForgetAllSpells);
            ForgetAllSpellsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ToggleOnlineOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, bool setOnlineToggle);

        [NonAction]
        public override System.Web.Mvc.ActionResult ToggleOnline(bool setOnlineToggle)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ToggleOnline);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "setOnlineToggle", setOnlineToggle);
            ToggleOnlineOverride(callInfo, setOnlineToggle);
            return callInfo;
        }

        [NonAction]
        partial void ToggleBossOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, bool setBossDisable);

        [NonAction]
        public override System.Web.Mvc.ActionResult ToggleBoss(bool setBossDisable)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ToggleBoss);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "setBossDisable", setBossDisable);
            ToggleBossOverride(callInfo, setBossDisable);
            return callInfo;
        }

        [NonAction]
        partial void BossDisableRestoreBaseOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult BossDisableRestoreBase()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.BossDisableRestoreBase);
            BossDisableRestoreBaseOverride(callInfo);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
