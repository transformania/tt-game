// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using TT.Web.Controllers.Generated;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    public static TT.Web.Controllers.AccountController Account = new TT.Web.Controllers.T4MVC_AccountController();
    public static TT.Web.Controllers.Admin.DonatorController Donator = new TT.Web.Controllers.Admin.T4MVC_DonatorController();
    public static TT.Web.Controllers.Admin.RestockItemController RestockItem = new TT.Web.Controllers.Admin.T4MVC_RestockItemController();
    public static TT.Web.Controllers.Admin.TomeController Tome = new TT.Web.Controllers.Admin.T4MVC_TomeController();
    public static TT.Web.Controllers.ChatController Chat = new TT.Web.Controllers.T4MVC_ChatController();
    public static TT.Web.Controllers.ContributionController Contribution = new TT.Web.Controllers.T4MVC_ContributionController();
    public static TT.Web.Controllers.CovenantController Covenant = new TT.Web.Controllers.T4MVC_CovenantController();
    public static TT.Web.Controllers.DuelController Duel = new TT.Web.Controllers.T4MVC_DuelController();
    public static TT.Web.Controllers.InfoController Info = new TT.Web.Controllers.T4MVC_InfoController();
    public static TT.Web.Controllers.ItemController Item = new TT.Web.Controllers.T4MVC_ItemController();
    public static TT.Web.Controllers.LeaderboardController Leaderboard = new TT.Web.Controllers.T4MVC_LeaderboardController();
    public static TT.Web.Controllers.MessagesController Messages = new TT.Web.Controllers.T4MVC_MessagesController();
    public static TT.Web.Controllers.MindControlController MindControl = new TT.Web.Controllers.T4MVC_MindControlController();
    public static TT.Web.Controllers.ModeratorController Moderator = new TT.Web.Controllers.T4MVC_ModeratorController();
    public static TT.Web.Controllers.NPCController NPC = new TT.Web.Controllers.T4MVC_NPCController();
    public static TT.Web.Controllers.PvPAdminController PvPAdmin = new TT.Web.Controllers.T4MVC_PvPAdminController();
    public static TT.Web.Controllers.PvPController PvP = new TT.Web.Controllers.T4MVC_PvPController();
    public static TT.Web.Controllers.QuestController Quest = new TT.Web.Controllers.T4MVC_QuestController();
    public static TT.Web.Controllers.QuestWriterController QuestWriter = new TT.Web.Controllers.T4MVC_QuestWriterController();
    public static TT.Web.Controllers.ReportController Report = new TT.Web.Controllers.T4MVC_ReportController();
    public static TT.Web.Controllers.SettingsController Settings = new TT.Web.Controllers.T4MVC_SettingsController();
    public static TT.Web.Controllers.Generated.AdminController Admin = new TT.Web.Controllers.Generated.AdminController();
    public static TT.Web.Controllers.Generated.SharedController Shared = new TT.Web.Controllers.Generated.SharedController();
}

namespace TT.Web.Controllers.Generated
{
}

#pragma warning disable 0436
namespace TT.Web.Controllers.Generated
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}
#pragma warning restore 0436

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_JsonResult : System.Web.Mvc.JsonResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_JsonResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        public const string UrlPath = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
        public static readonly string boxesResize_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/boxesResize.min.js") ? Url("boxesResize.min.js") : Url("boxesResize.js");
        public static readonly string buffsTableColoring_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/buffsTableColoring.min.js") ? Url("buffsTableColoring.min.js") : Url("buffsTableColoring.js");
        public static readonly string custom_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/custom.min.js") ? Url("custom.min.js") : Url("custom.js");
        public static readonly string itemDetailModal_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/itemDetailModal.min.js") ? Url("itemDetailModal.min.js") : Url("itemDetailModal.js");
        public static readonly string leaderboardDropdown_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/leaderboardDropdown.min.js") ? Url("leaderboardDropdown.min.js") : Url("leaderboardDropdown.js");
        public static readonly string newCharacter_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/newCharacter.min.js") ? Url("newCharacter.min.js") : Url("newCharacter.js");
        public static readonly string notices_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/notices.min.js") ? Url("notices.min.js") : Url("notices.js");
        public static readonly string pastRounds_json = Url("pastRounds.json");
        public static readonly string randomFirstLastNames_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/randomFirstLastNames.min.js") ? Url("randomFirstLastNames.min.js") : Url("randomFirstLastNames.js");
        public static readonly string suggestedLength_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/suggestedLength.min.js") ? Url("suggestedLength.min.js") : Url("suggestedLength.js");
        public static readonly string tt_api_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/tt.api.min.js") ? Url("tt.api.min.js") : Url("tt.api.js");
        public static readonly string tt_chat_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/tt.chat.min.js") ? Url("tt.chat.min.js") : Url("tt.chat.js");
        public static readonly string tt_chat_messages_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/tt.chat.messages.min.js") ? Url("tt.chat.messages.min.js") : Url("tt.chat.messages.js");
        public static readonly string tt_chat_operations_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/tt.chat.operations.min.js") ? Url("tt.chat.operations.min.js") : Url("tt.chat.operations.js");
        public static readonly string tt_chat_userList_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/tt.chat.userList.min.js") ? Url("tt.chat.userList.min.js") : Url("tt.chat.userList.js");
        public static readonly string tt_config_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/tt.config.min.js") ? Url("tt.config.min.js") : Url("tt.config.js");
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        public const string UrlPath = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
        public static readonly string custom_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/custom.min.css") ? Url("custom.min.css") : Url("custom.css");
        public static readonly string custom_min_css = Url("custom.min.css");
        public static readonly string custom_scss = Url("custom.scss");
        public static readonly string LeTitsNow_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/LeTitsNow.min.css") ? Url("LeTitsNow.min.css") : Url("LeTitsNow.css");
        public static readonly string PvP_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/PvP.min.css") ? Url("PvP.min.css") : Url("PvP.css");
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class lib {
        public const string UrlPath = "~/lib";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Chart_js {
            public const string UrlPath = "~/lib/Chart.js";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string Chart_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/Chart.min.css") ? Url("Chart.min.css") : Url("Chart.css");
            public static readonly string Chart_js_ = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/Chart.min.js") ? Url("Chart.min.js") : Url("Chart.js");
            public static readonly string Chart_min_css = Url("Chart.min.css");
            public static readonly string Chart_min_js = Url("Chart.min.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class clipboard_js {
            public const string UrlPath = "~/lib/clipboard.js";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string clipboard_js_ = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/clipboard.min.js") ? Url("clipboard.min.js") : Url("clipboard.js");
            public static readonly string clipboard_min_js = Url("clipboard.min.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class datatables_net {
            public const string UrlPath = "~/lib/datatables.net";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string jquery_dataTables_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.dataTables.min.js") ? Url("jquery.dataTables.min.js") : Url("jquery.dataTables.js");
            public static readonly string jquery_dataTables_min_js = Url("jquery.dataTables.min.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class datatables_net_bs {
            public const string UrlPath = "~/lib/datatables.net-bs";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string dataTables_bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/dataTables.bootstrap.min.css") ? Url("dataTables.bootstrap.min.css") : Url("dataTables.bootstrap.css");
            public static readonly string dataTables_bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/dataTables.bootstrap.min.js") ? Url("dataTables.bootstrap.min.js") : Url("dataTables.bootstrap.js");
            public static readonly string dataTables_bootstrap_min_css = Url("dataTables.bootstrap.min.css");
            public static readonly string dataTables_bootstrap_min_js = Url("dataTables.bootstrap.min.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class datatables_net_responsive {
            public const string UrlPath = "~/lib/datatables.net-responsive";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string dataTables_responsive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/dataTables.responsive.min.js") ? Url("dataTables.responsive.min.js") : Url("dataTables.responsive.js");
            public static readonly string dataTables_responsive_min_js = Url("dataTables.responsive.min.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class datatables_net_responsive_bs {
            public const string UrlPath = "~/lib/datatables.net-responsive-bs";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string responsive_bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/responsive.bootstrap.min.css") ? Url("responsive.bootstrap.min.css") : Url("responsive.bootstrap.css");
            public static readonly string responsive_bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/responsive.bootstrap.min.js") ? Url("responsive.bootstrap.min.js") : Url("responsive.bootstrap.js");
            public static readonly string responsive_bootstrap_min_css = Url("responsive.bootstrap.min.css");
            public static readonly string responsive_bootstrap_min_js = Url("responsive.bootstrap.min.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class jquery {
            public const string UrlPath = "~/lib/jquery";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.min.js") ? Url("jquery.min.js") : Url("jquery.js");
            public static readonly string jquery_min_js = Url("jquery.min.js");
            public static readonly string jquery_min_map = Url("jquery.min.map");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class jquery_ajax_unobtrusive {
            public const string UrlPath = "~/lib/jquery-ajax-unobtrusive";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string jquery_unobtrusive_ajax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.unobtrusive-ajax.min.js") ? Url("jquery.unobtrusive-ajax.min.js") : Url("jquery.unobtrusive-ajax.js");
            public static readonly string jquery_unobtrusive_ajax_min_js = Url("jquery.unobtrusive-ajax.min.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class jquery_touch_events {
            public const string UrlPath = "~/lib/jquery-touch-events";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string jquery_mobile_events_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.mobile-events.min.js") ? Url("jquery.mobile-events.min.js") : Url("jquery.mobile-events.js");
            public static readonly string jquery_mobile_events_min_js = Url("jquery.mobile-events.min.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class jqueryui {
            public const string UrlPath = "~/lib/jqueryui";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string jquery_ui_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-ui.min.js") ? Url("jquery-ui.min.js") : Url("jquery-ui.js");
            public static readonly string jquery_ui_min_js = Url("jquery-ui.min.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class mispell {
            public const string UrlPath = "~/lib/mispell";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class dist {
                public const string UrlPath = "~/lib/mispell/dist";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string mispell_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/mispell.min.js") ? Url("mispell.min.js") : Url("mispell.js");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class moment_js {
            public const string UrlPath = "~/lib/moment.js";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string moment_js_ = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moment.min.js") ? Url("moment.min.js") : Url("moment.js");
            public static readonly string moment_min_js = Url("moment.min.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class signalr_js {
            public const string UrlPath = "~/lib/signalr.js";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string jquery_signalR_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.signalR.min.js") ? Url("jquery.signalR.min.js") : Url("jquery.signalR.js");
            public static readonly string jquery_signalR_min_js = Url("jquery.signalR.min.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class twitter_bootstrap {
            public const string UrlPath = "~/lib/twitter-bootstrap";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class css {
                public const string UrlPath = "~/lib/twitter-bootstrap/css";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string bootstrap_theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-theme.min.css") ? Url("bootstrap-theme.min.css") : Url("bootstrap-theme.css");
                public static readonly string bootstrap_theme_css_map = Url("bootstrap-theme.css.map");
                public static readonly string bootstrap_theme_min_css = Url("bootstrap-theme.min.css");
                public static readonly string bootstrap_theme_min_css_map = Url("bootstrap-theme.min.css.map");
                public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
                public static readonly string bootstrap_css_map = Url("bootstrap.css.map");
                public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
                public static readonly string bootstrap_min_css_map = Url("bootstrap.min.css.map");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class fonts {
                public const string UrlPath = "~/lib/twitter-bootstrap/fonts";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string glyphicons_halflings_regular_eot = Url("glyphicons-halflings-regular.eot");
                public static readonly string glyphicons_halflings_regular_svg = Url("glyphicons-halflings-regular.svg");
                public static readonly string glyphicons_halflings_regular_ttf = Url("glyphicons-halflings-regular.ttf");
                public static readonly string glyphicons_halflings_regular_woff = Url("glyphicons-halflings-regular.woff");
                public static readonly string glyphicons_halflings_regular_woff2 = Url("glyphicons-halflings-regular.woff2");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class js {
                public const string UrlPath = "~/lib/twitter-bootstrap/js";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
                public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
                public static readonly string npm_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/npm.min.js") ? Url("npm.min.js") : Url("npm.js");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class vis {
            public const string UrlPath = "~/lib/vis";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class img {
                public const string UrlPath = "~/lib/vis/img";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class network {
                    public const string UrlPath = "~/lib/vis/img/network";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string acceptDeleteIcon_png = Url("acceptDeleteIcon.png");
                    public static readonly string addNodeIcon_png = Url("addNodeIcon.png");
                    public static readonly string backIcon_png = Url("backIcon.png");
                    public static readonly string connectIcon_png = Url("connectIcon.png");
                    public static readonly string cross_png = Url("cross.png");
                    public static readonly string cross2_png = Url("cross2.png");
                    public static readonly string deleteIcon_png = Url("deleteIcon.png");
                    public static readonly string downArrow_png = Url("downArrow.png");
                    public static readonly string editIcon_png = Url("editIcon.png");
                    public static readonly string leftArrow_png = Url("leftArrow.png");
                    public static readonly string minus_png = Url("minus.png");
                    public static readonly string plus_png = Url("plus.png");
                    public static readonly string rightArrow_png = Url("rightArrow.png");
                    public static readonly string upArrow_png = Url("upArrow.png");
                    public static readonly string zoomExtends_png = Url("zoomExtends.png");
                }
            
            }
        
            public static readonly string vis_graph3d_min_js = Url("vis-graph3d.min.js");
            public static readonly string vis_network_min_css = Url("vis-network.min.css");
            public static readonly string vis_network_min_js = Url("vis-network.min.js");
            public static readonly string vis_timeline_graph2d_min_css = Url("vis-timeline-graph2d.min.css");
            public static readonly string vis_timeline_graph2d_min_js = Url("vis-timeline-graph2d.min.js");
            public static readonly string vis_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/vis.min.css") ? Url("vis.min.css") : Url("vis.css");
            public static readonly string vis_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/vis.min.js") ? Url("vis.min.js") : Url("vis.js");
            public static readonly string vis_js_map = Url("vis.js.map");
            public static readonly string vis_map = Url("vis.map");
            public static readonly string vis_min_css = Url("vis.min.css");
            public static readonly string vis_min_js = Url("vis.min.js");
        }
    
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static class Assets
            {
                public static readonly string boxesResize_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/boxesResize.js"); 
                public static readonly string buffsTableColoring_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/buffsTableColoring.js"); 
                public static readonly string custom_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/custom.js"); 
                public static readonly string itemDetailModal_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/itemDetailModal.js"); 
                public static readonly string leaderboardDropdown_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/leaderboardDropdown.js"); 
                public static readonly string newCharacter_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/newCharacter.js"); 
                public static readonly string notices_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/notices.js"); 
                public static readonly string randomFirstLastNames_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/randomFirstLastNames.js"); 
                public static readonly string suggestedLength_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/suggestedLength.js"); 
                public static readonly string tt_api_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/tt.api.js"); 
                public static readonly string tt_chat_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/tt.chat.js"); 
                public static readonly string tt_chat_messages_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/tt.chat.messages.js"); 
                public static readonly string tt_chat_operations_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/tt.chat.operations.js"); 
                public static readonly string tt_chat_userList_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/tt.chat.userList.js"); 
                public static readonly string tt_config_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/tt.config.js"); 
            }
        }
        public static partial class Content 
        {
            public static class Assets
            {
                public static readonly string custom_css = T4MVCHelpers.ProcessAssetPath("~/Content/custom.css");
                public static readonly string custom_min_css_ = T4MVCHelpers.ProcessAssetPath("~/Content/custom.min.css");
                public static readonly string LeTitsNow_css = T4MVCHelpers.ProcessAssetPath("~/Content/LeTitsNow.css");
                public static readonly string PvP_css = T4MVCHelpers.ProcessAssetPath("~/Content/PvP.css");
            }
        }
        public static partial class lib 
        {
            public static partial class Chart_js 
            {
                public static class Assets
                {
                    public static readonly string Chart_css = T4MVCHelpers.ProcessAssetPath("~/lib/Chart.js/Chart.css");
                    public static readonly string Chart_js_ = T4MVCHelpers.ProcessAssetPath("~/lib/Chart.js/Chart.js"); 
                    public static readonly string Chart_min_css = T4MVCHelpers.ProcessAssetPath("~/lib/Chart.js/Chart.min.css");
                    public static readonly string Chart_min_js = T4MVCHelpers.ProcessAssetPath("~/lib/Chart.js/Chart.min.js"); 
                }
            }
            public static partial class clipboard_js 
            {
                public static class Assets
                {
                    public static readonly string clipboard_js_ = T4MVCHelpers.ProcessAssetPath("~/lib/clipboard.js/clipboard.js"); 
                    public static readonly string clipboard_min_js = T4MVCHelpers.ProcessAssetPath("~/lib/clipboard.js/clipboard.min.js"); 
                }
            }
            public static partial class datatables_net 
            {
                public static class Assets
                {
                    public static readonly string jquery_dataTables_js = T4MVCHelpers.ProcessAssetPath("~/lib/datatables.net/jquery.dataTables.js"); 
                    public static readonly string jquery_dataTables_min_js = T4MVCHelpers.ProcessAssetPath("~/lib/datatables.net/jquery.dataTables.min.js"); 
                }
            }
            public static partial class datatables_net_bs 
            {
                public static class Assets
                {
                    public static readonly string dataTables_bootstrap_css = T4MVCHelpers.ProcessAssetPath("~/lib/datatables.net-bs/dataTables.bootstrap.css");
                    public static readonly string dataTables_bootstrap_js = T4MVCHelpers.ProcessAssetPath("~/lib/datatables.net-bs/dataTables.bootstrap.js"); 
                    public static readonly string dataTables_bootstrap_min_css = T4MVCHelpers.ProcessAssetPath("~/lib/datatables.net-bs/dataTables.bootstrap.min.css");
                    public static readonly string dataTables_bootstrap_min_js = T4MVCHelpers.ProcessAssetPath("~/lib/datatables.net-bs/dataTables.bootstrap.min.js"); 
                }
            }
            public static partial class datatables_net_responsive 
            {
                public static class Assets
                {
                    public static readonly string dataTables_responsive_js = T4MVCHelpers.ProcessAssetPath("~/lib/datatables.net-responsive/dataTables.responsive.js"); 
                    public static readonly string dataTables_responsive_min_js = T4MVCHelpers.ProcessAssetPath("~/lib/datatables.net-responsive/dataTables.responsive.min.js"); 
                }
            }
            public static partial class datatables_net_responsive_bs 
            {
                public static class Assets
                {
                    public static readonly string responsive_bootstrap_css = T4MVCHelpers.ProcessAssetPath("~/lib/datatables.net-responsive-bs/responsive.bootstrap.css");
                    public static readonly string responsive_bootstrap_js = T4MVCHelpers.ProcessAssetPath("~/lib/datatables.net-responsive-bs/responsive.bootstrap.js"); 
                    public static readonly string responsive_bootstrap_min_css = T4MVCHelpers.ProcessAssetPath("~/lib/datatables.net-responsive-bs/responsive.bootstrap.min.css");
                    public static readonly string responsive_bootstrap_min_js = T4MVCHelpers.ProcessAssetPath("~/lib/datatables.net-responsive-bs/responsive.bootstrap.min.js"); 
                }
            }
            public static partial class jquery 
            {
                public static class Assets
                {
                    public static readonly string jquery_js = T4MVCHelpers.ProcessAssetPath("~/lib/jquery/jquery.js"); 
                    public static readonly string jquery_min_js = T4MVCHelpers.ProcessAssetPath("~/lib/jquery/jquery.min.js"); 
                }
            }
            public static partial class jquery_ajax_unobtrusive 
            {
                public static class Assets
                {
                    public static readonly string jquery_unobtrusive_ajax_js = T4MVCHelpers.ProcessAssetPath("~/lib/jquery-ajax-unobtrusive/jquery.unobtrusive-ajax.js"); 
                    public static readonly string jquery_unobtrusive_ajax_min_js = T4MVCHelpers.ProcessAssetPath("~/lib/jquery-ajax-unobtrusive/jquery.unobtrusive-ajax.min.js"); 
                }
            }
            public static partial class jquery_touch_events 
            {
                public static class Assets
                {
                    public static readonly string jquery_mobile_events_js = T4MVCHelpers.ProcessAssetPath("~/lib/jquery-touch-events/jquery.mobile-events.js"); 
                    public static readonly string jquery_mobile_events_min_js = T4MVCHelpers.ProcessAssetPath("~/lib/jquery-touch-events/jquery.mobile-events.min.js"); 
                }
            }
            public static partial class jqueryui 
            {
                public static class Assets
                {
                    public static readonly string jquery_ui_js = T4MVCHelpers.ProcessAssetPath("~/lib/jqueryui/jquery-ui.js"); 
                    public static readonly string jquery_ui_min_js = T4MVCHelpers.ProcessAssetPath("~/lib/jqueryui/jquery-ui.min.js"); 
                }
            }
            public static partial class mispell 
            {
                public static partial class dist 
                {
                    public static class Assets
                    {
                        public static readonly string mispell_js = T4MVCHelpers.ProcessAssetPath("~/lib/mispell/dist/mispell.js"); 
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class moment_js 
            {
                public static class Assets
                {
                    public static readonly string moment_js_ = T4MVCHelpers.ProcessAssetPath("~/lib/moment.js/moment.js"); 
                    public static readonly string moment_min_js = T4MVCHelpers.ProcessAssetPath("~/lib/moment.js/moment.min.js"); 
                }
            }
            public static partial class signalr_js 
            {
                public static class Assets
                {
                    public static readonly string jquery_signalR_js = T4MVCHelpers.ProcessAssetPath("~/lib/signalr.js/jquery.signalR.js"); 
                    public static readonly string jquery_signalR_min_js = T4MVCHelpers.ProcessAssetPath("~/lib/signalr.js/jquery.signalR.min.js"); 
                }
            }
            public static partial class twitter_bootstrap 
            {
                public static partial class css 
                {
                    public static class Assets
                    {
                        public static readonly string bootstrap_theme_css = T4MVCHelpers.ProcessAssetPath("~/lib/twitter-bootstrap/css/bootstrap-theme.css");
                        public static readonly string bootstrap_theme_min_css = T4MVCHelpers.ProcessAssetPath("~/lib/twitter-bootstrap/css/bootstrap-theme.min.css");
                        public static readonly string bootstrap_css = T4MVCHelpers.ProcessAssetPath("~/lib/twitter-bootstrap/css/bootstrap.css");
                        public static readonly string bootstrap_min_css = T4MVCHelpers.ProcessAssetPath("~/lib/twitter-bootstrap/css/bootstrap.min.css");
                    }
                }
                public static partial class fonts 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class js 
                {
                    public static class Assets
                    {
                        public static readonly string bootstrap_js = T4MVCHelpers.ProcessAssetPath("~/lib/twitter-bootstrap/js/bootstrap.js"); 
                        public static readonly string bootstrap_min_js = T4MVCHelpers.ProcessAssetPath("~/lib/twitter-bootstrap/js/bootstrap.min.js"); 
                        public static readonly string npm_js = T4MVCHelpers.ProcessAssetPath("~/lib/twitter-bootstrap/js/npm.js"); 
                    }
                }
                public static class Assets
                {
                }
            }
            public static partial class vis 
            {
                public static partial class img 
                {
                    public static partial class network 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                    public static readonly string vis_graph3d_min_js = T4MVCHelpers.ProcessAssetPath("~/lib/vis/vis-graph3d.min.js"); 
                    public static readonly string vis_network_min_css = T4MVCHelpers.ProcessAssetPath("~/lib/vis/vis-network.min.css");
                    public static readonly string vis_network_min_js = T4MVCHelpers.ProcessAssetPath("~/lib/vis/vis-network.min.js"); 
                    public static readonly string vis_timeline_graph2d_min_css = T4MVCHelpers.ProcessAssetPath("~/lib/vis/vis-timeline-graph2d.min.css");
                    public static readonly string vis_timeline_graph2d_min_js = T4MVCHelpers.ProcessAssetPath("~/lib/vis/vis-timeline-graph2d.min.js"); 
                    public static readonly string vis_css = T4MVCHelpers.ProcessAssetPath("~/lib/vis/vis.css");
                    public static readonly string vis_js = T4MVCHelpers.ProcessAssetPath("~/lib/vis/vis.js"); 
                    public static readonly string vis_min_css = T4MVCHelpers.ProcessAssetPath("~/lib/vis/vis.min.css");
                    public static readonly string vis_min_js = T4MVCHelpers.ProcessAssetPath("~/lib/vis/vis.min.js"); 
                }
            }
            public static class Assets
            {
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    private static string ProcessAssetPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and should retain this prefix
        return virtualPath;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;
    public static Func<string, string> ProcessAssetPath = ProcessAssetPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


