@model TT.Domain.ViewModels.CovenantViewModel
@using TT.Domain.Statics
@using TT.Domain.Procedures
@{
    ViewBag.Title = "Look at Covenant";
}


@section menu
{
    <li><a href="@Url.Action(MVC.PvP.Play())">Back to game</a></li>
    @{
        if (ViewBag.Player.Covenant != null)
        {
            <li><a href="@Url.Action(MVC.Covenant.MyCovenant())">Back to My Covenant</a></li>
        }
    }
    <li><a href="@Url.Action(MVC.Covenant.CovenantList())">View All Covenants</a></li>
    @{
        if (User.IsInRole(PvPStatics.Permissions_Moderator) || User.IsInRole(PvPStatics.Permissions_Admin))
        {
            <li><a href="@Url.Action(MVC.Chat.ChatLog($"coven_{Model.dbCovenant.Id}", "lasth"))" target="_blank">Moderate Chat</a></li>
        }
    }
}

<div class="containerInner text-center">
    <div class="covFlag" style="background-image: url(https://images.transformaniatime.com/CovenantFlags/@Model.dbCovenant.FlagUrl)"></div>
    @if (Model.dbCovenant.CovenMascot > 0)
    {
        <a class="mascot" style="background-image: url(@TT.Web.CustomHtmlHelpers.HtmlHelpers.GetImageURL(PlayerProcedures.GetPlayerFormViewModel(Model.Mascot.Id), true));" href="@Url.Action(MVC.PvP.LookAtPlayer(Model.Mascot.Id))">
        @Model.Mascot.FirstName @Model.Mascot.LastName
        </a>
    }
    <p class="covHeader"><span class="covName">@Model.dbCovenant.Name</span></p><br>
    <p>
        <b>@Model.dbCovenant.SelfDescription</b>
    </p>
    <p>
        @{
            if (!Model.dbCovenant.HomeLocation.IsNullOrEmpty())
            {
                <i>This covenant has a safeground at <b>@LocationsStatics.LocationList.GetLocation.FirstOrDefault(l => l.dbName == Model.dbCovenant.HomeLocation).Name</b> and has enchanted <b>@ViewBag.LocationsControlled</b> locations.</i>
            }
        }
    </p>
    <a href="@Url.Action(MVC.PvP.LookAtPlayer(Model.Leader.Id))">Led by @Model.Leader.GetFullName()</a>

    <p>
        <a href="@Url.Action(MVC.Covenant.ApplyToCovenant(Model.dbCovenant.Id))">Apply to join this covenant</a>
        @{
            if (Model.IsFull)
            {
                <span class="bad">(Currently full!)</span>
            }
        }
    </p>
</div>

<div class="onlinePlayersWrapperBG">
    <div class="row boxContainer">
@foreach (var p in Model.Members.OrderByDescending(c => c.Player.Level).ThenByDescending(c => c.Player.XP))
    {
                <div class="col-md-2 col-sm-4 col-xs-12 charaBox">
                    <div class="charaBoxInner">
                        <div>
                            <p>

                          @Html.Partial(MVC.PvP.Views.Player_Partial, p)
                            </p>
                        </div>
                    </div>
                </div>
      }
    </div>
</div>
