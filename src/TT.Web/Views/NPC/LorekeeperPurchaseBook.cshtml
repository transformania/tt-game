@model TT.Domain.ViewModels.NPCs.LorekeeperBookListViewModel
@using TT.Domain.Procedures;
@using TT.Domain.Statics
@{
    ViewBag.Title = "Purchase Book";
}

@section scripts
{
    <script src="@Links.Scripts.itemDetailModal_js"></script>
}

@section menu
{
    <li><a href="@Url.Action(MVC.PvP.Play())">Back to game</a></li>
    <li><a href="@Url.Action(MVC.NPC.TalkToLorekeeper())">Talk</a></li>
}

<div class="containerInner">
    <h1>Purchase from Skaldrlyr</h1>

    <p>"Ah, booksss... ssso full of magicsss and wisssdom.  Try not to get lossst ine one... and yesss, I do mean that literally."</p>

    <p>You currently have <b>@Model.MyMoney</b> <span title="Arpeyjis" class="icon icon-money"></span> Arpeyjis to spend.</p>

    <hr>

    <div id="fullDetails">

    </div>
    <div class="row boxContainer">

        @{
            foreach (var i in Model.Items.OrderBy(i => i.dbName).ThenByDescending(i => i.Level))
            {
                if ((i.ItemSource.ItemType == PvPStatics.ItemType_Consumable && i.ItemSource.ConsumableSubItemType == (int)ItemStatics.ConsumableSubItemTypes.Tome) && (ItemProcedures.PlayerHasReadBook(Model.Player, i.ItemSource.Id)))
                {
                    <div id="readTome">
                        @Html.Partial(MVC.PvP.Views.partial_ShopkeeperItem, i)
                    </div>
                }
                else
                {
                    @Html.Partial(MVC.PvP.Views.partial_ShopkeeperItem, i)
                }
            }
        }
    </div>
</div>

<style>
    #readTome::before {
        content: "¶";
        height: 100px;
        color: darkred;
    }
</style>