@model TT.Domain.ViewModels.PlayerFormViewModel
@using TT.Web.CustomHtmlHelpers
@using TT.Domain
@using TT.Domain.Procedures
@using TT.Domain.Statics
@using TT.Domain.Identity.Queries;

@{
    var HealthWidth = Math.Min(100, Model.Player.Health / Model.Player.MaxHealth * 100);
    var ManaWidth = Math.Min(100, Model.Player.Mana / Model.Player.MaxMana * 100);
    string gendercolor;
    if (Model.Player.Gender == PvPStatics.GenderMale)
    {
        gendercolor = "blue";
    }
    else if (Model.Player.Gender == PvPStatics.GenderFemale)
    {
        gendercolor = "purple";
    }
    else
    {
        gendercolor = "black";
    }

}

<div id="playnum-@Model.Player.Id">
    <div class="portraitFrame @HtmlHelpers.GetPortraitBorderClass(Model.Player.BotId)">
        <div class="portrait center-block" style="background-image: url(@HtmlHelpers.GetImageURL(Model, true)); position: relative;">

            <span style="position: absolute; top: 2px; right: 2px;">@HtmlHelpers.PrintGenderIcon(Model.Player.Gender)</span>
            <span class="icon icon-level"><b>@Model.Player.Level</b></span>

            <span class="portraitIconRP">@HtmlHelpers.PrintRPIcon(Model.Player.ToDbPlayer()) @HtmlHelpers.PrintPvPIcon(Model.Player.ToDbPlayer()) @HtmlHelpers.PrintMCIcon(Model.Player.ToDbPlayer()) @HtmlHelpers.PrintDonatorIcon(Model.Player.ToDbPlayer())</span>
            @{
                if (PlayerProcedures.PlayerIsOffline(Model.Player))
                {
                    <span class="icon icon-sleep" title="This player is offline and cannot be attacked."></span>
                }
            }
            @if (Model.Player.InHardmode)
            {
                <span class="icon icon-hard" title="This player is in Hard Mode."></span>
            }
            @if (Model.Player.FriendOnlyMessages)
            {
            <span class="glyphicon glyphicon-headphones text-danger stroke-white well-sm" style="position: absolute; top: auto; bottom: 6px; left: 10px; width: 16px; height: 16px;" title="Only allowing messages from friends"></span>
            }
        </div>
    </div>

    <div class="charInfoWrapper">
        <span class="name">
            <span style="color: @gendercolor">
                <a href="@Url.Action(MVC.PvP.LookAtPlayer(Model.Player.Id))">@Model.Player.GetFullName()</a>
                @HtmlHelpers.PrintDuelIcon(Model.Player.ToDbPlayer())
                @HtmlHelpers.PrintQuestIcon(Model.Player.ToDbPlayer())
                <br>
                <span class="playerDescription">@Model.Form.FriendlyName</span>
            </span>
        </span><br>
        <span class="covBox">@HtmlHelpers.GetCovenantInfo(Model.Player.ToDbPlayer())</span>
        <div class="healthWrapper" title="@Model.Player.Health / @Model.Player.MaxHealth willpower">
            <div class="healthBar" style="width: @HealthWidth%"></div>
        </div>
        <div class="manaWrapper" title="@Model.Player.Mana / @Model.Player.MaxMana mana">
            <div class="manaBar" style="width: @ManaWidth%"></div>
        </div>
    </div>
</div>

