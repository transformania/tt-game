@model TT.Domain.ViewModels.PlayerFormViewModel
@using TT.Web.CustomHtmlHelpers
@using TT.Domain
@using TT.Domain.Statics
@using TT.Domain.Procedures
@using TT.Domain.Identity.Queries

@{

    var HealthWidth = Math.Max(0, Math.Min(100, Convert.ToInt32(Model.Player.Health / Model.Player.MaxHealth * 100)));
    var ManaWidth = Math.Max(0, Math.Min(100, Convert.ToInt32(Model.Player.Mana / Model.Player.MaxMana * 100)));
    var ActionWidth = Math.Max(0, Math.Min(100, Convert.ToInt32(Model.Player.ActionPoints / TurnTimesStatics.GetActionPointLimit() * 100)));

}
<div class="row">
    <div class="col-md-4 col-sm-6 hidden-xs">
        <div class="frontOuter">
            <div class="avatarText">
                <p class="avatarName"><a href="@Url.Action(MVC.PvP.LookAtPlayer(Model.Player.Id))">@Model.Player.GetFullName()</a></p>
                <p class="avatarFormName">@Model.Form.FriendlyName</p>
                <p class="avatarCoven">@HtmlHelpers.GetCovenantInfo(Model.Player.ToDbPlayer())</p>
            </div>
        </div>
    </div>

    <div class="visible-xs center-block">
        <p class="avatarFormName"><a href="@Url.Action(MVC.PvP.LookAtPlayer(Model.Player.Id))">@Model.Player.GetFullName()</a></p>
        <p><span style="font-size: 12px">Level: <b>@Model.Player.Level</b></span> - @Model.Form.FriendlyName @HtmlHelpers.PrintGenderIcon(Model.Player.Gender)</p>
        <div class="portraitMobile" style="background-image: url(@HtmlHelpers.GetImageURL(Model, false));" title="@Model.Form.Description">
            @{if (PlayerProcedures.PlayerIsOffline(Model.Player))
            {
                <span class="icon icon-sleep" title="This player is offline and will be harder to attack."></span>
            }
            }
            <span class="iconPortraitLarge">
                @HtmlHelpers.PrintDonatorIcon(Model.Player.ToDbPlayer())
                @HtmlHelpers.PrintRPIcon(Model.Player.ToDbPlayer())
                @HtmlHelpers.PrintPvPIcon(Model.Player.ToDbPlayer())
                @HtmlHelpers.PrintMCIcon(Model.Player.ToDbPlayer())
            </span>
        </div>

        <div class="barWrapper">
            <div class="barText" style="font-size: 12px;"><span id="wp_num1">@Model.Player.Health</span> / @Model.Player.MaxHealth WP</div>
            <div id="wp_amt1" class="barData barWP" style="width: @HealthWidth%"></div>
        </div>


        <div class="barWrapper">
            <div class="barText" style="font-size: 12px;">@Model.Player.Mana / @Model.Player.MaxMana MP</div>
            <div id="mn_amt1" class="barData barMP" style="width: @ManaWidth%"></div>
        </div>



        <div class="barWrapper">
            <div class="barText" style="font-size: 12px;">@Model.Player.ActionPoints / @TurnTimesStatics.GetActionPointLimit() AP (res: @Model.Player.ActionPoints_Refill) </div>
            <div class="barData barAP" style="width: @ActionWidth%"></div>
        </div>

        @Html.Partial(MVC.PvP.Views.partial_XpBar, Model)

        <span title="Times attacking this update" class="icon icon-timesattacking"></span><span class="avatarCount">@Model.Player.TimesAttackingThisUpdate @(PvPStatics.ChaosMode ? "" : "/ " + PvPStatics.MaxAttacksPerUpdate)</span>
        <span title="Times cleansing and meditating this update" class="icon icon-cleansemeditate"></span><span class="avatarCount"> @Model.Player.CleansesMeditatesThisRound @(PvPStatics.ChaosMode ? "" : "/ " + PvPStatics.MaxCleansesMeditatesPerUpdate)</span>
        <span title="Arpeyjis" class="icon icon-money"></span><span class="avatarCount"> @Math.Floor(Model.Player.Money)</span>
    </div>


    <div class="col-md-4 col-sm-6 hidden-xs">
        <div class="frontOuter" id="frontOuterAvatar">
            <div class="portraitFront" style="background-image: url(@HtmlHelpers.GetImageURL(Model, false));" title="@Model.Form.Description">

                <span style="float:right;">@HtmlHelpers.PrintGenderIcon(Model.Player.Gender)</span>
                <span class="icon icon-level"><b>@Model.Player.Level</b></span>
                @{if (PlayerProcedures.PlayerIsOffline(Model.Player))
                {
                    <span class="icon icon-sleep" title="This player is offline and will be harder to attack."></span>
                }
                }
                @if (Model.Player.InHardmode)
                {
                    <span class="icon icon-hard" title="This player is in Hard Mode."></span>
                }
                @if (Model.Player.FriendOnlyMessages)
                {
                    <span class="glyphicon glyphicon-headphones text-danger stroke-white well-sm" style="position: absolute; top: auto; bottom: 6px; right: 7px; width: 16px; height: 16px;" title="Only allowing messages from friends"></span>
                }
                <span class="iconPortraitLarge">
                    @HtmlHelpers.PrintDonatorIcon(Model.Player.ToDbPlayer())
                    @HtmlHelpers.PrintRPIcon(Model.Player.ToDbPlayer())
                    @HtmlHelpers.PrintPvPIcon(Model.Player.ToDbPlayer())
                    @HtmlHelpers.PrintMCIcon(Model.Player.ToDbPlayer())
                </span>
            </div>
        </div>
    </div>

    <div class="col-md-4 col-sm-12 hidden-xs">
        <div class="frontOuter">
            <div class="avatarBars">
                <div class="barWrapper">
                    <div class="barText"><span id="wp_num2">@Model.Player.Health</span> / @Model.Player.MaxHealth willpower</div>
                    <div id="wp_amt2" class="barData barWP" style="width: @HealthWidth%"></div>
                </div>


                <div class="barWrapper">
                    <div class="barText">@Model.Player.Mana / @Model.Player.MaxMana mana</div>
                    <div id="mn_amt2" class="barData barMP" style="width: @ManaWidth%"></div>
                </div>



                <div class="barWrapper">
                    <div class="barText">@Model.Player.ActionPoints / @TurnTimesStatics.GetActionPointLimit() AP (@Model.Player.ActionPoints_Refill in reserve) </div>
                    <div id="mn_amt" class="barData barAP" style="width: @ActionWidth%"></div>
                </div>

                @Html.Partial(MVC.PvP.Views.partial_XpBar, Model)

                <span title="Times attacking this update" class="icon icon-timesattacking"></span><span class="avatarCount"> @Model.Player.TimesAttackingThisUpdate / @(PvPStatics.ChaosMode ? "∞" : PvPStatics.MaxAttacksPerUpdate.ToString())</span>
                <span title="Times cleansing and meditating this update" class="icon icon-cleansemeditate"></span><span class="avatarCount"> @Model.Player.CleansesMeditatesThisRound / @(PvPStatics.ChaosMode ? "∞" : PvPStatics.MaxCleansesMeditatesPerUpdate.ToString())</span>
                <span title="Arpeyjis" class="icon icon-money"></span><span class="avatarCount"> @Math.Floor(Model.Player.Money)</span>
            </div>
        </div>
    </div>
</div>


