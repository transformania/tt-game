
@model TT.Domain.ViewModels.Quest.QuestEndFormViewModel

@using TT.Domain.Statics


<h4>Parent Quest State:</h4>

@{
    if (Model.ParentQuestState != null)
    {

        <p>@Ajax.ActionLink("[" + Model.ParentQuestState.QuestStateName + "]", MVC.QuestWriter.QuestState(Model.ParentQuestState.Id, Model.QuestEnd.QuestId, -1), new AjaxOptions { UpdateTargetId = "swapMe", InsertionMode = InsertionMode.Replace, HttpMethod = "GET", OnSuccess = "success", OnFailure = "fail", OnBegin = "waiting" }, new { @class = "parentButton" })</p>
    }
}

<hr>

@using (Ajax.BeginForm(MVC.QuestWriter.QuestEndSend(), new AjaxOptions { UpdateTargetId = "swapMe", InsertionMode = InsertionMode.Replace, HttpMethod = "POST", OnSuccess = "success", OnFailure = "fail", OnBegin = "waiting" }, new { @class = "" }))
{

    @Html.HiddenFor(m => m.QuestEnd.Id)
    @Html.HiddenFor(m => m.ParentQuestState.Id)
    @Html.HiddenFor(m => m.QuestEnd.QuestId)

    <label>Quest End name:</label>    <br>
    @Html.TextBoxFor(m => m.QuestEnd.QuestEndName)

    <br>
    <br>

    <label>Quest End Type:</label>    <br>
    @Html.DropDownListFor(m => m.QuestEnd.EndType, new SelectList(
                  new List<Object>{
                      new { value = (int)QuestStatics.QuestOutcomes.Completed, text = "PASS"  },
                       new { value = (int)QuestStatics.QuestOutcomes.Failed, text = "FAIL"  },
                      new { value = (int)QuestStatics.QuestOutcomes.RepeatCompleted, text = "PASS (repeatable)"  },
                    },
                  "value",
                  "text",
                   2))

    <br>
    <br>

    <label>Quest Reward Type:</label>
    <br>
    @Html.DropDownListFor(m => m.QuestEnd.RewardType, new SelectList(
                  new List<Object>{
                      new { value = (int)QuestStatics.RewardType.Experience, text = "XP"  },
                      new { value = (int)QuestStatics.RewardType.Effect, text = "Effect"  },
                      new { value = (int)QuestStatics.RewardType.Item, text = "Item/Pet"  },
                      new { value = (int)QuestStatics.RewardType.Spell, text = "Spell"  },
                      new { value = (int)QuestStatics.RewardType.Money, text = "Money"  },
                      new { value = (int)QuestStatics.RewardType.PvPScore, text = "PvP Score"  },
                    },
                  "value",
                  "text",
                   2))

    <br>
    <br>

    <label>Quest Reward Amount:</label>
    <br>
    @Html.TextBoxFor(m => m.QuestEnd.RewardAmount)

    <br>
    <br>

    <input type="submit" class="btn btn-chat" value="Send">

}

