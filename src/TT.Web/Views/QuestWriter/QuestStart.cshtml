@model TT.Domain.Models.QuestStart
@using TT.Domain.Statics

<p>@Ajax.ActionLink("Click to view all quest states in this quest", MVC.QuestWriter.ShowAllQuestStates(Model.Id), new AjaxOptions { UpdateTargetId = "swapMe", InsertionMode = InsertionMode.Replace, HttpMethod = "GET", OnSuccess = "success", OnFailure = "fail", OnBegin = "waiting" }, new { @class = "" })</p>
<p>@Ajax.ActionLink("Click to view all quest connections in this quest", MVC.QuestWriter.ShowAllQuestConnections(Model.Id), new AjaxOptions { UpdateTargetId = "swapMe", InsertionMode = InsertionMode.Replace, HttpMethod = "GET", OnSuccess = "success", OnFailure = "fail", OnBegin = "waiting" }, new { @class = "" })</p>
<p>@Ajax.ActionLink("View Diagram", MVC.QuestWriter.Diagram(Model.Id), new AjaxOptions { UpdateTargetId = "swapMe", InsertionMode = InsertionMode.Replace, HttpMethod = "GET", OnSuccess = "success", OnFailure = "fail", OnBegin = "waiting" }, new { @class = "" })</p>

@using (Ajax.BeginForm(MVC.QuestWriter.QuestStartSend(), new AjaxOptions { UpdateTargetId = "swapMe", InsertionMode = InsertionMode.Replace, HttpMethod = "POST", OnSuccess = "success", OnFailure = "fail", OnBegin = "waiting" }, new { @class = "" }))
{

    @Html.HiddenFor(m => m.StartState)

    if (Model.IsLive)
    {
        <h4 class="good">This quest is live and can be started by any eligible player.</h4>
    }
    else
    {
        <h4 class="bad">This quest is not live and cannot be started by any player.</h4>
    }


    <br>
    <br>

    if (User.IsInRole(PvPStatics.Permissions_Admin) || User.IsInRole(PvPStatics.Permissions_Publisher))
    {
        <p>
            <span class="glyphicon glyphicon-ok" aria-hidden="true"></span>
            @Ajax.ActionLink("Mark as Live", MVC.QuestWriter.MarkQuestAsLive(Model.Id, true), new AjaxOptions { UpdateTargetId = "swapMe", InsertionMode = InsertionMode.Replace, HttpMethod = "GET", OnSuccess = "success", OnFailure = "fail", OnBegin = "waiting" }, new { @class = "good" })
        </p>


        <p>
            <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
            @Ajax.ActionLink("Mark as Not Live", MVC.QuestWriter.MarkQuestAsLive(Model.Id, false), new AjaxOptions { UpdateTargetId = "swapMe", InsertionMode = InsertionMode.Replace, HttpMethod = "GET", OnSuccess = "success", OnFailure = "fail", OnBegin = "waiting" }, new { @class = "bad" })
        </p>
    }

    <br>
    <br>

    <label>Quest Name:</label>
    @Html.TextBoxFor(m => m.Name)

    <br>
    <br>

    <label>Description:</label><br>
    @Html.TextAreaFor(m => m.Description, new { @placeholder = "Example:  You see a wanted poster on the wall with a high bounty asking people to risk their animacy to track down a notorious spellslinger with over a hundred inanimated victims to her name.  Do you sign up to take part in the manhunt?" })

    <br>
    <br>

    <label>Quest Tags:</label><br>
    @Html.TextBoxFor(m => m.Tags, new { @placeholder = "Example:  transgender, farm, picnic, vore, mind control" })

    <br>
    <br>

    <label>Location:</label>
    @Html.TextBoxFor(m => m.Location)

    <br>
    <br>

    <btn class="glyphicon glyphicon-question-sign helpButton">
        @Ajax.ActionLink("Click here to show list of all locations", MVC.Info.AllLocations(), new AjaxOptions { UpdateTargetId = "locationsBox", InsertionMode = InsertionMode.Replace, HttpMethod = "GET", OnSuccess = "success", OnFailure = "fail" }, new { @class = "" })
    </btn>

    <div id="locationsBox" style="background-color: #cdcdff"></div>

    <br>
    <br>

    <label>Minimum Start Turn:</label>
    @Html.TextBoxFor(m => m.MinStartTurn)

    <br>
    <br>

    <label>Maximum Start Turn:</label>
    @Html.TextBoxFor(m => m.MaxStartTurn)

    <br>
    <br>

    <label>Minimum Start Level:</label>
    @Html.TextBoxFor(m => m.MinStartLevel)

    <br>
    <br>

    <label>Maximum Start Level:</label>
    @Html.TextBoxFor(m => m.MaxStartLevel)

    <br>
    <br>

    <label>Required Form ID:</label>
    @Html.TextBoxFor(m => m.PrerequisiteForm)

    <br>
    <br>

    <label>Required Gender to start:</label>
    @Html.DropDownListFor(m => m.RequiredGender, new SelectList(
              new List<Object>{
                  new { value = (int)QuestStatics.Gender.Any  , text = "Any"  },
                   new { value = (int)QuestStatics.Gender.Male  , text = "Male"  },
                    new { value = (int)QuestStatics.Gender.Female  , text = "Female"  },
                },
              "value",
              "text",
               2))

    <br>
    <br>

    <label>Prerequisite Quest Id:</label>
    @Html.TextBoxFor(m => m.PrerequisiteQuest)

    <br>
    <br>

    <label>Lockout Quest Id (Quest that would PREVENT player from starting this quest if completed):</label>
    @Html.TextBoxFor(m => m.LockoutQuest)

    <br>
    <br>


    if (Model.Id > 0 && ViewBag.firstState != null)
    {
        <p>@Ajax.ActionLink("STARTING QUEST STATE -- " + ((TT.Domain.Models.QuestState)ViewBag.firstState).QuestStateName, MVC.QuestWriter.QuestState((int)ViewBag.firstState.Id, Model.Id, -1), new AjaxOptions { UpdateTargetId = "swapMe", InsertionMode = InsertionMode.Replace, HttpMethod = "GET", OnSuccess = "success", OnFailure = "fail", OnBegin = "waiting" }, new { @class = "editButton" })</p>
    }
    else
    {
        <p class="bad">No starting state created yet</p>
    }


    <br>
    <br>


    @Html.HiddenFor(m => m.Id)

    <br>
    <input type="submit" class="btn btn-chat" value="Send">

}

<br>
<br>





